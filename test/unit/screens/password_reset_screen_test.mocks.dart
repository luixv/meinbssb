// Mocks generated by Mockito 5.4.6 from annotations
// in meinbssb/test/unit/screens/password_reset_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i8;

import 'package:meinbssb/services/api/auth_service.dart' as _i3;
import 'package:meinbssb/services/core/config_service.dart' as _i9;
import 'package:meinbssb/services/core/font_size_provider.dart' as _i7;
import 'package:meinbssb/services/core/network_service.dart' as _i6;
import 'package:meinbssb/services/core/postgrest_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostgrestService_0 extends _i1.SmartFake
    implements _i2.PostgrestService {
  _FakePostgrestService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_1 extends _i1.SmartFake implements Duration {
  _FakeDuration_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostgrestService get postgrestService => (super.noSuchMethod(
        Invocation.getter(#postgrestService),
        returnValue: _FakePostgrestService_0(
          this,
          Invocation.getter(#postgrestService),
        ),
      ) as _i2.PostgrestService);

  @override
  String generateVerificationToken() => (super.noSuchMethod(
        Invocation.method(
          #generateVerificationToken,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateVerificationToken,
            [],
          ),
        ),
      ) as String);

  @override
  _i5.Future<Map<String, dynamic>> register({
    required String? firstName,
    required String? lastName,
    required String? passNumber,
    required String? email,
    required String? birthDate,
    required String? zipCode,
    required String? personId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #passNumber: passNumber,
            #email: email,
            #birthDate: birthDate,
            #zipCode: zipCode,
            #personId: personId,
          },
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> changePassword(
    int? personId,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [
            personId,
            newPassword,
          ],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<dynamic> finalizeRegistration({
    required String? email,
    required String? password,
    required String? token,
    required String? personId,
    required String? passNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #finalizeRegistration,
          [],
          {
            #email: email,
            #password: password,
            #token: token,
            #personId: personId,
            #passNumber: passNumber,
          },
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> findePersonID2(
    String? nachname,
    String? passnummer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findePersonID2,
          [
            nachname,
            passnummer,
          ],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<String> fetchLoginEmail(String? passnummer) => (super.noSuchMethod(
        Invocation.method(
          #fetchLoginEmail,
          [passnummer],
        ),
        returnValue: _i5.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #fetchLoginEmail,
            [passnummer],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<bool> isTokenValid() => (super.noSuchMethod(
        Invocation.method(
          #isTokenValid,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<String> getPersonIDByPassnummer(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPersonIDByPassnummer,
          [passNumber],
        ),
        returnValue: _i5.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #getPersonIDByPassnummer,
            [passNumber],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<Map<String, dynamic>> getPassDatenByPersonId(String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPassDatenByPersonId,
          [personId],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<String> findePersonID(
    String? lastName,
    String? firstName,
    String? birthDate,
    String? passNumber,
    String? zipCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findePersonID,
          [
            lastName,
            firstName,
            birthDate,
            passNumber,
            zipCode,
          ],
        ),
        returnValue: _i5.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #findePersonID,
            [
              lastName,
              firstName,
              birthDate,
              passNumber,
              zipCode,
            ],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<Map<String, dynamic>> resetPasswordStep1(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordStep1,
          [passNumber],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> resetPasswordStep2(
    String? token,
    String? personId,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordStep2,
          [
            token,
            personId,
            newPassword,
          ],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i6.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> hasInternet() => (super.noSuchMethod(
        Invocation.method(
          #hasInternet,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  Duration getCacheExpirationDuration() => (super.noSuchMethod(
        Invocation.method(
          #getCacheExpirationDuration,
          [],
        ),
        returnValue: _FakeDuration_1(
          this,
          Invocation.method(
            #getCacheExpirationDuration,
            [],
          ),
        ),
      ) as Duration);
}

/// A class which mocks [FontSizeProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFontSizeProvider extends _i1.Mock implements _i7.FontSizeProvider {
  MockFontSizeProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get scaleFactor => (super.noSuchMethod(
        Invocation.getter(#scaleFactor),
        returnValue: 0.0,
      ) as double);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void increaseFontSize() => super.noSuchMethod(
        Invocation.method(
          #increaseFontSize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void decreaseFontSize() => super.noSuchMethod(
        Invocation.method(
          #decreaseFontSize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetFontSize() => super.noSuchMethod(
        Invocation.method(
          #resetFontSize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  double getScaledFontSize(double? baseSize) => (super.noSuchMethod(
        Invocation.method(
          #getScaledFontSize,
          [baseSize],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  String getScalePercentage() => (super.noSuchMethod(
        Invocation.method(
          #getScalePercentage,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getScalePercentage,
            [],
          ),
        ),
      ) as String);

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i9.ConfigService {
  MockConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int? getInt(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getInt,
        [
          key,
          section,
        ],
      )) as int?);

  @override
  String? getString(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getString,
        [
          key,
          section,
        ],
      )) as String?);

  @override
  List<String>? getList(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getList,
        [
          key,
          section,
        ],
      )) as List<String>?);

  @override
  bool? getBool(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getBool,
        [
          key,
          section,
        ],
      )) as bool?);
}
