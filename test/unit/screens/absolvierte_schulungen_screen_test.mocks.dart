// Mocks generated by Mockito 5.4.6 from annotations
// in meinbssb/test/unit/screens/absolvierte_schulungen_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i10;
import 'dart:ui' as _i24;

import 'package:meinbssb/models/bank_data.dart' as _i14;
import 'package:meinbssb/models/contact.dart' as _i9;
import 'package:meinbssb/models/disziplin.dart' as _i13;
import 'package:meinbssb/models/fremde_verband.dart' as _i16;
import 'package:meinbssb/models/gewinn.dart' as _i20;
import 'package:meinbssb/models/pass_data_zve.dart' as _i6;
import 'package:meinbssb/models/person.dart' as _i17;
import 'package:meinbssb/models/register_schulungen_teilnehmer_response.dart'
    as _i2;
import 'package:meinbssb/models/result.dart' as _i18;
import 'package:meinbssb/models/schulung.dart' as _i8;
import 'package:meinbssb/models/schulungsart.dart' as _i11;
import 'package:meinbssb/models/schulungstermin.dart' as _i12;
import 'package:meinbssb/models/user_data.dart' as _i5;
import 'package:meinbssb/models/verein.dart' as _i15;
import 'package:meinbssb/models/zweitmitgliedschaft_data.dart' as _i7;
import 'package:meinbssb/services/api_service.dart' as _i3;
import 'package:meinbssb/services/core/config_service.dart' as _i19;
import 'package:meinbssb/services/core/font_size_provider.dart' as _i22;
import 'package:meinbssb/services/core/network_service.dart' as _i21;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i23;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRegisterSchulungenTeilnehmerResponse_1 extends _i1.SmartFake
    implements _i2.RegisterSchulungenTeilnehmerResponse {
  _FakeRegisterSchulungenTeilnehmerResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> hasInternet() => (super.noSuchMethod(
        Invocation.method(
          #hasInternet,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  Duration getCacheExpirationDuration() => (super.noSuchMethod(
        Invocation.method(
          #getCacheExpirationDuration,
          [],
        ),
        returnValue: _FakeDuration_0(
          this,
          Invocation.method(
            #getCacheExpirationDuration,
            [],
          ),
        ),
      ) as Duration);

  @override
  _i4.Future<Map<String, dynamic>> register({
    required String? firstName,
    required String? lastName,
    required String? passNumber,
    required String? email,
    required String? birthDate,
    required String? zipCode,
    required String? personId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #passNumber: passNumber,
            #email: email,
            #birthDate: birthDate,
            #zipCode: zipCode,
            #personId: personId,
          },
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> passwordReset(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #passwordReset,
          [passNumber],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> changePassword(
    int? personId,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [
            personId,
            newPassword,
          ],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<_i5.UserData?> fetchPassdaten(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdaten,
          [personId],
        ),
        returnValue: _i4.Future<_i5.UserData?>.value(),
      ) as _i4.Future<_i5.UserData?>);

  @override
  _i4.Future<List<_i6.PassDataZVE>> fetchPassdatenZVE(
    int? passdatenId,
    int? personId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdatenZVE,
          [
            passdatenId,
            personId,
          ],
        ),
        returnValue:
            _i4.Future<List<_i6.PassDataZVE>>.value(<_i6.PassDataZVE>[]),
      ) as _i4.Future<List<_i6.PassDataZVE>>);

  @override
  _i4.Future<bool> updateKritischeFelderUndAdresse(_i5.UserData? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateKritischeFelderUndAdresse,
          [userData],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<List<_i7.ZweitmitgliedschaftData>> fetchZweitmitgliedschaften(
          int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchZweitmitgliedschaften,
          [personId],
        ),
        returnValue: _i4.Future<List<_i7.ZweitmitgliedschaftData>>.value(
            <_i7.ZweitmitgliedschaftData>[]),
      ) as _i4.Future<List<_i7.ZweitmitgliedschaftData>>);

  @override
  _i4.Future<List<_i8.Schulung>> fetchAbsolvierteSchulungen(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAbsolvierteSchulungen,
          [personId],
        ),
        returnValue: _i4.Future<List<_i8.Schulung>>.value(<_i8.Schulung>[]),
      ) as _i4.Future<List<_i8.Schulung>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> fetchKontakte(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchKontakte,
          [personId],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<bool> addKontakt(_i9.Contact? contact) => (super.noSuchMethod(
        Invocation.method(
          #addKontakt,
          [contact],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> deleteKontakt(_i9.Contact? contact) => (super.noSuchMethod(
        Invocation.method(
          #deleteKontakt,
          [contact],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i10.Uint8List> fetchSchuetzenausweis(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchuetzenausweis,
          [personId],
        ),
        returnValue: _i4.Future<_i10.Uint8List>.value(_i10.Uint8List(0)),
      ) as _i4.Future<_i10.Uint8List>);

  @override
  _i4.Future<List<_i11.Schulungsart>> fetchSchulungsarten() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungsarten,
          [],
        ),
        returnValue:
            _i4.Future<List<_i11.Schulungsart>>.value(<_i11.Schulungsart>[]),
      ) as _i4.Future<List<_i11.Schulungsart>>);

  @override
  _i4.Future<List<_i12.Schulungstermin>> fetchAngemeldeteSchulungen(
    int? personId,
    String? abDatum,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAngemeldeteSchulungen,
          [
            personId,
            abDatum,
          ],
        ),
        returnValue: _i4.Future<List<_i12.Schulungstermin>>.value(
            <_i12.Schulungstermin>[]),
      ) as _i4.Future<List<_i12.Schulungstermin>>);

  @override
  _i4.Future<List<_i12.Schulungstermin>> fetchSchulungstermine(
    String? abDatum,
    String? webGruppe,
    String? bezirk,
    String? fuerVerlaengerung,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungstermine,
          [
            abDatum,
            webGruppe,
            bezirk,
            fuerVerlaengerung,
          ],
        ),
        returnValue: _i4.Future<List<_i12.Schulungstermin>>.value(
            <_i12.Schulungstermin>[]),
      ) as _i4.Future<List<_i12.Schulungstermin>>);

  @override
  _i4.Future<_i12.Schulungstermin?> fetchSchulungstermin(
          String? schulungenTerminID) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungstermin,
          [schulungenTerminID],
        ),
        returnValue: _i4.Future<_i12.Schulungstermin?>.value(),
      ) as _i4.Future<_i12.Schulungstermin?>);

  @override
  _i4.Future<bool> unregisterFromSchulung(int? schulungenTeilnehmerID) =>
      (super.noSuchMethod(
        Invocation.method(
          #unregisterFromSchulung,
          [schulungenTeilnehmerID],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> registerFromSchulung(
    int? personId,
    int? schulungId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerFromSchulung,
          [
            personId,
            schulungId,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<List<_i13.Disziplin>> fetchDisziplinen() => (super.noSuchMethod(
        Invocation.method(
          #fetchDisziplinen,
          [],
        ),
        returnValue: _i4.Future<List<_i13.Disziplin>>.value(<_i13.Disziplin>[]),
      ) as _i4.Future<List<_i13.Disziplin>>);

  @override
  _i4.Future<List<_i14.BankData>> fetchBankData(int? webloginId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBankData,
          [webloginId],
        ),
        returnValue: _i4.Future<List<_i14.BankData>>.value(<_i14.BankData>[]),
      ) as _i4.Future<List<_i14.BankData>>);

  @override
  _i4.Future<bool> registerBankData(_i14.BankData? bankData) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerBankData,
          [bankData],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> deleteBankData(_i14.BankData? bankData) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBankData,
          [bankData],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<List<_i15.Verein>> fetchVereine() => (super.noSuchMethod(
        Invocation.method(
          #fetchVereine,
          [],
        ),
        returnValue: _i4.Future<List<_i15.Verein>>.value(<_i15.Verein>[]),
      ) as _i4.Future<List<_i15.Verein>>);

  @override
  _i4.Future<List<_i15.Verein>> fetchVerein(int? vereinsNr) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchVerein,
          [vereinsNr],
        ),
        returnValue: _i4.Future<List<_i15.Verein>>.value(<_i15.Verein>[]),
      ) as _i4.Future<List<_i15.Verein>>);

  @override
  _i4.Future<List<_i16.FremdeVerband>> fetchFremdeVerbaende(int? vereinsNr) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchFremdeVerbaende,
          [vereinsNr],
        ),
        returnValue:
            _i4.Future<List<_i16.FremdeVerband>>.value(<_i16.FremdeVerband>[]),
      ) as _i4.Future<List<_i16.FremdeVerband>>);

  @override
  _i4.Future<_i2.RegisterSchulungenTeilnehmerResponse>
      registerSchulungenTeilnehmer({
    required int? schulungTerminId,
    required _i5.UserData? user,
    required String? email,
    required String? telefon,
    required _i14.BankData? bankData,
    required List<Map<String, dynamic>>? felderArray,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #registerSchulungenTeilnehmer,
              [],
              {
                #schulungTerminId: schulungTerminId,
                #user: user,
                #email: email,
                #telefon: telefon,
                #bankData: bankData,
                #felderArray: felderArray,
              },
            ),
            returnValue:
                _i4.Future<_i2.RegisterSchulungenTeilnehmerResponse>.value(
                    _FakeRegisterSchulungenTeilnehmerResponse_1(
              this,
              Invocation.method(
                #registerSchulungenTeilnehmer,
                [],
                {
                  #schulungTerminId: schulungTerminId,
                  #user: user,
                  #email: email,
                  #telefon: telefon,
                  #bankData: bankData,
                  #felderArray: felderArray,
                },
              ),
            )),
          ) as _i4.Future<_i2.RegisterSchulungenTeilnehmerResponse>);

  @override
  _i4.Future<int> findePersonID2(
    String? nachname,
    String? passnummer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findePersonID2,
          [
            nachname,
            passnummer,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> clearSchulungenCache(int? personId) => (super.noSuchMethod(
        Invocation.method(
          #clearSchulungenCache,
          [personId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearAllSchulungenCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAllSchulungenCache,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearPassdatenCache(int? personId) => (super.noSuchMethod(
        Invocation.method(
          #clearPassdatenCache,
          [personId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendSchulungAbmeldungEmail({
    required String? personId,
    required String? schulungName,
    required String? schulungDate,
    required String? firstName,
    required String? lastName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSchulungAbmeldungEmail,
          [],
          {
            #personId: personId,
            #schulungName: schulungName,
            #schulungDate: schulungDate,
            #firstName: firstName,
            #lastName: lastName,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendSchulungAnmeldungEmail({
    required String? personId,
    required String? schulungName,
    required String? schulungDate,
    required String? firstName,
    required String? lastName,
    required String? passnumber,
    required String? email,
    required int? schulungRegistered,
    required int? schulungTotal,
    String? location,
    DateTime? eventDateTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSchulungAnmeldungEmail,
          [],
          {
            #personId: personId,
            #schulungName: schulungName,
            #schulungDate: schulungDate,
            #firstName: firstName,
            #lastName: lastName,
            #passnumber: passnumber,
            #email: email,
            #schulungRegistered: schulungRegistered,
            #schulungTotal: schulungTotal,
            #location: location,
            #eventDateTime: eventDateTime,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearAllPassdatenCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAllPassdatenCache,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearDisziplinenCache() => (super.noSuchMethod(
        Invocation.method(
          #clearDisziplinenCache,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i17.Person>> fetchAdresseVonPersonID(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAdresseVonPersonID,
          [personId],
        ),
        returnValue: _i4.Future<List<_i17.Person>>.value(<_i17.Person>[]),
      ) as _i4.Future<List<_i17.Person>>);

  @override
  bool validateIBAN(String? iban) => (super.noSuchMethod(
        Invocation.method(
          #validateIBAN,
          [iban],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<Map<String, dynamic>> createUser({
    required String? firstName,
    required String? lastName,
    required String? email,
    required String? passNumber,
    required String? personId,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #email: email,
            #passNumber: passNumber,
            #personId: personId,
            #verificationToken: verificationToken,
          },
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>?> getUserByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<Map<String, dynamic>?> getUserByPassNumber(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPassNumber,
          [passNumber],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<bool> verifyUser(String? verificationToken) => (super.noSuchMethod(
        Invocation.method(
          #verifyUser,
          [verificationToken],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> deleteUserRegistration(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserRegistration,
          [id],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, dynamic>?> getUserByVerificationToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByVerificationToken,
          [token],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<bool> uploadProfilePhoto(
    String? userId,
    List<int>? photoBytes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePhoto,
          [
            userId,
            photoBytes,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> deleteProfilePhoto(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteProfilePhoto,
          [userId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<String?> getFromEmail() => (super.noSuchMethod(
        Invocation.method(
          #getFromEmail,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<String?> getRegistrationSubject() => (super.noSuchMethod(
        Invocation.method(
          #getRegistrationSubject,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<String?> getRegistrationContent() => (super.noSuchMethod(
        Invocation.method(
          #getRegistrationContent,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<Map<String, dynamic>> sendEmail({
    required String? from,
    required String? recipient,
    required String? subject,
    String? htmlBody,
    int? emailId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmail,
          [],
          {
            #from: from,
            #recipient: recipient,
            #subject: subject,
            #htmlBody: htmlBody,
            #emailId: emailId,
          },
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<void> sendAccountCreationNotifications(
    String? personId,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendAccountCreationNotifications,
          [
            personId,
            email,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i18.Result>> fetchResults(
    String? passnummer,
    _i19.ConfigService? configService,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchResults,
          [
            passnummer,
            configService,
          ],
        ),
        returnValue: _i4.Future<List<_i18.Result>>.value(<_i18.Result>[]),
      ) as _i4.Future<List<_i18.Result>>);

  @override
  _i4.Future<List<_i20.Gewinn>> fetchGewinne(
    int? jahr,
    String? passnummer,
    _i19.ConfigService? configService,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGewinne,
          [
            jahr,
            passnummer,
            configService,
          ],
        ),
        returnValue: _i4.Future<List<_i20.Gewinn>>.value(<_i20.Gewinn>[]),
      ) as _i4.Future<List<_i20.Gewinn>>);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i21.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> hasInternet() => (super.noSuchMethod(
        Invocation.method(
          #hasInternet,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  Duration getCacheExpirationDuration() => (super.noSuchMethod(
        Invocation.method(
          #getCacheExpirationDuration,
          [],
        ),
        returnValue: _FakeDuration_0(
          this,
          Invocation.method(
            #getCacheExpirationDuration,
            [],
          ),
        ),
      ) as Duration);
}

/// A class which mocks [FontSizeProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFontSizeProvider extends _i1.Mock implements _i22.FontSizeProvider {
  MockFontSizeProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get scaleFactor => (super.noSuchMethod(
        Invocation.getter(#scaleFactor),
        returnValue: 0.0,
      ) as double);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void increaseFontSize() => super.noSuchMethod(
        Invocation.method(
          #increaseFontSize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void decreaseFontSize() => super.noSuchMethod(
        Invocation.method(
          #decreaseFontSize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetFontSize() => super.noSuchMethod(
        Invocation.method(
          #resetFontSize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  double getScaledFontSize(double? baseSize) => (super.noSuchMethod(
        Invocation.method(
          #getScaledFontSize,
          [baseSize],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  String getScalePercentage() => (super.noSuchMethod(
        Invocation.method(
          #getScalePercentage,
          [],
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #getScalePercentage,
            [],
          ),
        ),
      ) as String);

  @override
  void addListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i24.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i19.ConfigService {
  MockConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int? getInt(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getInt,
        [
          key,
          section,
        ],
      )) as int?);

  @override
  String? getString(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getString,
        [
          key,
          section,
        ],
      )) as String?);
}
