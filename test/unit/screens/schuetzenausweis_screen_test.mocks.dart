// Mocks generated by Mockito 5.4.6 from annotations
// in meinbssb/test/unit/screens/schuetzenausweis_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:typed_data' as _i4;

import 'package:meinbssb/services/api_service.dart' as _i2;
import 'package:meinbssb/services/core/config_service.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> hasInternet() => (super.noSuchMethod(
        Invocation.method(
          #hasInternet,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  Duration getCacheExpirationDuration() => (super.noSuchMethod(
        Invocation.method(
          #getCacheExpirationDuration,
          [],
        ),
        returnValue: _FakeDuration_0(
          this,
          Invocation.method(
            #getCacheExpirationDuration,
            [],
          ),
        ),
      ) as Duration);

  @override
  _i3.Future<Map<String, dynamic>> register({
    required String? firstName,
    required String? lastName,
    required String? passNumber,
    required String? email,
    required String? birthDate,
    required String? zipCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #passNumber: passNumber,
            #email: email,
            #birthDate: birthDate,
            #zipCode: zipCode,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> resetPassword(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [passNumber],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> fetchPassdaten(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdaten,
          [personId],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<bool> updateKritischeFelderUndAdresse(
    int? personId,
    String? titel,
    String? namen,
    String? vorname,
    int? geschlecht,
    String? strasse,
    String? plz,
    String? ort,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateKritischeFelderUndAdresse,
          [
            personId,
            titel,
            namen,
            vorname,
            geschlecht,
            strasse,
            plz,
            ort,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i4.Uint8List> fetchSchuetzenausweis(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchuetzenausweis,
          [personId],
        ),
        returnValue: _i3.Future<_i4.Uint8List>.value(_i4.Uint8List(0)),
      ) as _i3.Future<_i4.Uint8List>);

  @override
  _i3.Future<List<dynamic>> fetchAngemeldeteSchulungen(
    int? personId,
    String? abDatum,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAngemeldeteSchulungen,
          [
            personId,
            abDatum,
          ],
        ),
        returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<List<dynamic>> fetchAvailableSchulungen() => (super.noSuchMethod(
        Invocation.method(
          #fetchAvailableSchulungen,
          [],
        ),
        returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<List<dynamic>> fetchAbsolvierteSchulungen(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAbsolvierteSchulungen,
          [personId],
        ),
        returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<List<dynamic>> fetchZweitmitgliedschaften(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchZweitmitgliedschaften,
          [personId],
        ),
        returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<List<dynamic>> fetchPassdatenZVE(
    int? passdatenId,
    int? personId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdatenZVE,
          [
            passdatenId,
            personId,
          ],
        ),
        returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> fetchKontakte(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchKontakte,
          [personId],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<bool> addKontakt(
    int? personId,
    int? kontaktTyp,
    String? kontakt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addKontakt,
          [
            personId,
            kontaktTyp,
            kontakt,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteKontakt(
    int? personId,
    int? kontaktId,
    int? kontaktTyp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteKontakt,
          [
            personId,
            kontaktId,
            kontaktTyp,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>> fetchBankdaten(int? webloginId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBankdaten,
          [webloginId],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> registerBankdaten(
    int? webloginId,
    String? kontoinhaber,
    String? iban,
    String? bic,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerBankdaten,
          [
            webloginId,
            kontoinhaber,
            iban,
            bic,
          ],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<bool> unregisterFromSchulung(int? schulungenTeilnehmerID) =>
      (super.noSuchMethod(
        Invocation.method(
          #unregisterFromSchulung,
          [schulungenTeilnehmerID],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i5.ConfigService {
  MockConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int? getInt(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getInt,
        [
          key,
          section,
        ],
      )) as int?);

  @override
  String? getString(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getString,
        [
          key,
          section,
        ],
      )) as String?);
}
