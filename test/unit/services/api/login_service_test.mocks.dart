// Mocks generated by Mockito 5.4.6 from annotations
// in meinbssb/test/unit/services/api/login_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;
import 'dart:typed_data' as _i6;

import 'package:flutter/foundation.dart' as _i10;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:meinbssb/models/bank_data.dart' as _i16;
import 'package:meinbssb/services/api/auth_service.dart' as _i11;
import 'package:meinbssb/services/api/bank_service.dart' as _i15;
import 'package:meinbssb/services/api/training_service.dart' as _i13;
import 'package:meinbssb/services/api/user_service.dart' as _i14;
import 'package:meinbssb/services/api/verein_service.dart' as _i17;
import 'package:meinbssb/services/core/cache_service.dart' as _i8;
import 'package:meinbssb/services/core/config_service.dart' as _i12;
import 'package:meinbssb/services/core/http_client.dart' as _i4;
import 'package:meinbssb/services/core/image_service.dart' as _i7;
import 'package:meinbssb/services/core/network_service.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T1> extends _i1.SmartFake implements _i2.Future<T1> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_1 extends _i1.SmartFake implements Duration {
  _FakeDuration_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_2 extends _i1.SmartFake implements _i3.IOSOptions {
  _FakeIOSOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_3 extends _i1.SmartFake
    implements _i3.AndroidOptions {
  _FakeAndroidOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_4 extends _i1.SmartFake implements _i3.LinuxOptions {
  _FakeLinuxOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_5 extends _i1.SmartFake
    implements _i3.WindowsOptions {
  _FakeWindowsOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_6 extends _i1.SmartFake implements _i3.WebOptions {
  _FakeWebOptions_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_7 extends _i1.SmartFake implements _i3.MacOsOptions {
  _FakeMacOsOptions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.HttpClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  int get serverTimeout => (super.noSuchMethod(
        Invocation.getter(#serverTimeout),
        returnValue: 0,
      ) as int);

  @override
  _i2.Future<dynamic> post(
    String? endpoint,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            endpoint,
            body,
          ],
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<dynamic> put(
    String? endpoint,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            endpoint,
            body,
          ],
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<dynamic> delete(
    String? endpoint, {
    Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {#body: body},
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<dynamic> get(String? endpoint) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<dynamic> getWithBody(
    String? endpoint,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWithBody,
          [
            endpoint,
            body,
          ],
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<_i6.Uint8List> getBytes(String? endpoint) => (super.noSuchMethod(
        Invocation.method(
          #getBytes,
          [endpoint],
        ),
        returnValue: _i2.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
      ) as _i2.Future<_i6.Uint8List>);
}

/// A class which mocks [ImageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageService extends _i1.Mock implements _i7.ImageService {
  MockImageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> cacheSchuetzenausweis(
    int? personId,
    _i6.Uint8List? imageData,
    int? timestamp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheSchuetzenausweis,
          [
            personId,
            imageData,
            timestamp,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<_i6.Uint8List?> getCachedSchuetzenausweis(
    int? personId,
    Duration? validity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedSchuetzenausweis,
          [
            personId,
            validity,
          ],
        ),
        returnValue: _i2.Future<_i6.Uint8List?>.value(),
      ) as _i2.Future<_i6.Uint8List?>);

  @override
  _i2.Future<bool> isDeviceOnline() => (super.noSuchMethod(
        Invocation.method(
          #isDeviceOnline,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<_i6.Uint8List> fetchAndCacheSchuetzenausweis(
    int? personId,
    _i2.Future<_i6.Uint8List> Function()? fetchFunction,
    Duration? validityDuration,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAndCacheSchuetzenausweis,
          [
            personId,
            fetchFunction,
            validityDuration,
          ],
        ),
        returnValue: _i2.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
      ) as _i2.Future<_i6.Uint8List>);
}

/// A class which mocks [CacheService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheService extends _i1.Mock implements _i8.CacheService {
  MockCacheService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String?> getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<void> setJson(
    String? key,
    Map<String, dynamic>? json,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setJson,
          [
            key,
            json,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Map<String, dynamic>?> getJson(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getJson,
          [key],
        ),
        returnValue: _i2.Future<Map<String, dynamic>?>.value(),
      ) as _i2.Future<Map<String, dynamic>?>);

  @override
  _i2.Future<void> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<int?> getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValue: _i2.Future<int?>.value(),
      ) as _i2.Future<int?>);

  @override
  _i2.Future<void> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<bool?> getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: _i2.Future<bool?>.value(),
      ) as _i2.Future<bool?>);

  @override
  _i2.Future<void> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<bool> containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> setCacheTimestamp() => (super.noSuchMethod(
        Invocation.method(
          #setCacheTimestamp,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<T> getCachedData<T>(
    String? cacheKey,
    _i2.Future<T> Function()? getCachedData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedData,
          [
            cacheKey,
            getCachedData,
          ],
        ),
        returnValue: _i5.ifNotNull(
              _i5.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #getCachedData,
                  [
                    cacheKey,
                    getCachedData,
                  ],
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #getCachedData,
                [
                  cacheKey,
                  getCachedData,
                ],
              ),
            ),
      ) as _i2.Future<T>);

  @override
  _i2.Future<T> cacheAndRetrieveData<T>(
    String? cacheKey,
    Duration? validityDuration,
    _i2.Future<T> Function()? fetchData,
    T Function(dynamic)? processResponse,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheAndRetrieveData,
          [
            cacheKey,
            validityDuration,
            fetchData,
            processResponse,
          ],
        ),
        returnValue: _i5.ifNotNull(
              _i5.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #cacheAndRetrieveData,
                  [
                    cacheKey,
                    validityDuration,
                    fetchData,
                    processResponse,
                  ],
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #cacheAndRetrieveData,
                [
                  cacheKey,
                  validityDuration,
                  fetchData,
                  processResponse,
                ],
              ),
            ),
      ) as _i2.Future<T>);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i9.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<bool> hasInternet() => (super.noSuchMethod(
        Invocation.method(
          #hasInternet,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  Duration getCacheExpirationDuration() => (super.noSuchMethod(
        Invocation.method(
          #getCacheExpirationDuration,
          [],
        ),
        returnValue: _FakeDuration_1(
          this,
          Invocation.method(
            #getCacheExpirationDuration,
            [],
          ),
        ),
      ) as Duration);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i3.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_2(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i3.IOSOptions);

  @override
  _i3.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_3(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i3.AndroidOptions);

  @override
  _i3.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_4(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i3.LinuxOptions);

  @override
  _i3.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_5(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i3.WindowsOptions);

  @override
  _i3.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_6(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i3.WebOptions);

  @override
  _i3.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_7(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i3.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i10.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterListener({
    required String? key,
    required _i10.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAllListenersForKey,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
        Invocation.method(
          #unregisterAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Future<void> write({
    required String? key,
    required String? value,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String?> read({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<bool> containsKey({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> delete({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Map<String, String>> readAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i2.Future<Map<String, String>>);

  @override
  _i2.Future<void> deleteAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<bool?> isCupertinoProtectedDataAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isCupertinoProtectedDataAvailable,
          [],
        ),
        returnValue: _i2.Future<bool?>.value(),
      ) as _i2.Future<bool?>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i11.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<Map<String, dynamic>> register({
    required String? firstName,
    required String? lastName,
    required String? passNumber,
    required String? email,
    required String? birthDate,
    required String? zipCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #passNumber: passNumber,
            #email: email,
            #birthDate: birthDate,
            #zipCode: zipCode,
          },
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<Map<String, dynamic>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<Map<String, dynamic>> resetPassword(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [passNumber],
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i12.ConfigService {
  MockConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int? getInt(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getInt,
        [
          key,
          section,
        ],
      )) as int?);

  @override
  String? getString(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getString,
        [
          key,
          section,
        ],
      )) as String?);
}

/// A class which mocks [TrainingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrainingService extends _i1.Mock implements _i13.TrainingService {
  MockTrainingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<Map<String, dynamic>>> fetchAngemeldeteSchulungen(
    int? personId,
    String? abDatum,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAngemeldeteSchulungen,
          [
            personId,
            abDatum,
          ],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);

  @override
  _i2.Future<List<Map<String, dynamic>>> fetchAvailableSchulungen() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAvailableSchulungen,
          [],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);

  @override
  _i2.Future<List<Map<String, dynamic>>> fetchSchulungsarten() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungsarten,
          [],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);

  @override
  _i2.Future<bool> registerForSchulung(
    int? personId,
    int? schulungId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerForSchulung,
          [
            personId,
            schulungId,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> unregisterFromSchulung(int? schulungenTeilnehmerID) =>
      (super.noSuchMethod(
        Invocation.method(
          #unregisterFromSchulung,
          [schulungenTeilnehmerID],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<List<Map<String, dynamic>>> fetchAbsolvierteSchulungen(
          int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAbsolvierteSchulungen,
          [personId],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);

  @override
  _i2.Future<List<Map<String, dynamic>>> fetchDisziplinen() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchDisziplinen,
          [],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i14.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<Map<String, dynamic>> fetchPassdaten(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdaten,
          [personId],
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<bool> updateKritischeFelderUndAdresse(
    int? personId,
    String? titel,
    String? namen,
    String? vorname,
    int? geschlecht,
    String? strasse,
    String? plz,
    String? ort,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateKritischeFelderUndAdresse,
          [
            personId,
            titel,
            namen,
            vorname,
            geschlecht,
            strasse,
            plz,
            ort,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<List<dynamic>> fetchZweitmitgliedschaften(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchZweitmitgliedschaften,
          [personId],
        ),
        returnValue: _i2.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i2.Future<List<dynamic>>);

  @override
  _i2.Future<List<dynamic>> fetchPassdatenZVE(
    int? passdatenId,
    int? personId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdatenZVE,
          [
            passdatenId,
            personId,
          ],
        ),
        returnValue: _i2.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i2.Future<List<dynamic>>);

  @override
  _i2.Future<List<Map<String, dynamic>>> fetchKontakte(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchKontakte,
          [personId],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);

  @override
  _i2.Future<bool> addKontakt(
    int? personId,
    int? kontaktTyp,
    String? kontakt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addKontakt,
          [
            personId,
            kontaktTyp,
            kontakt,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> deleteKontakt(
    int? personId,
    int? kontaktId,
    int? kontaktTyp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteKontakt,
          [
            personId,
            kontaktId,
            kontaktTyp,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [BankService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBankService extends _i1.Mock implements _i15.BankService {
  MockBankService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<_i16.BankData>> fetchBankData(int? webloginId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBankData,
          [webloginId],
        ),
        returnValue: _i2.Future<List<_i16.BankData>>.value(<_i16.BankData>[]),
      ) as _i2.Future<List<_i16.BankData>>);

  @override
  _i2.Future<bool> registerBankData(_i16.BankData? bankData) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerBankData,
          [bankData],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> deleteBankData(_i16.BankData? bankData) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBankData,
          [bankData],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [VereinService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVereinService extends _i1.Mock implements _i17.VereinService {
  MockVereinService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<Map<String, dynamic>>> fetchVereine() => (super.noSuchMethod(
        Invocation.method(
          #fetchVereine,
          [],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);

  @override
  _i2.Future<List<Map<String, dynamic>>> fetchVerein(int? vereinsNr) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchVerein,
          [vereinsNr],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);
}
