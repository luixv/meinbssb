// Mocks generated by Mockito 5.4.6 from annotations
// in meinbssb/test/unit/services/core/login_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;
import 'dart:typed_data' as _i10;

import 'package:flutter/foundation.dart' as _i14;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:http/http.dart' as _i7;
import 'package:meinbssb/models/bank_data.dart' as _i22;
import 'package:meinbssb/models/bezirk.dart' as _i39;
import 'package:meinbssb/models/contact.dart' as _i27;
import 'package:meinbssb/models/disziplin.dart' as _i20;
import 'package:meinbssb/models/fremde_verband.dart' as _i32;
import 'package:meinbssb/models/gewinn.dart' as _i36;
import 'package:meinbssb/models/pass_data_zve.dart' as _i26;
import 'package:meinbssb/models/passdaten_akzept_or_aktiv.dart' as _i24;
import 'package:meinbssb/models/person.dart' as _i28;
import 'package:meinbssb/models/register_schulungen_teilnehmer_response.dart'
    as _i5;
import 'package:meinbssb/models/result.dart' as _i35;
import 'package:meinbssb/models/schulung.dart' as _i19;
import 'package:meinbssb/models/schulungsart.dart' as _i18;
import 'package:meinbssb/models/schulungstermin.dart' as _i17;
import 'package:meinbssb/models/user_data.dart' as _i21;
import 'package:meinbssb/models/verein.dart' as _i31;
import 'package:meinbssb/models/zweitmitgliedschaft_data.dart' as _i25;
import 'package:meinbssb/services/api/auth_service.dart' as _i15;
import 'package:meinbssb/services/api/bank_service.dart' as _i29;
import 'package:meinbssb/services/api/bezirk_service.dart' as _i38;
import 'package:meinbssb/services/api/oktoberfest_service.dart' as _i34;
import 'package:meinbssb/services/api/training_service.dart' as _i16;
import 'package:meinbssb/services/api/user_service.dart' as _i23;
import 'package:meinbssb/services/api/verein_service.dart' as _i30;
import 'package:meinbssb/services/core/cache_service.dart' as _i12;
import 'package:meinbssb/services/core/calendar_service.dart' as _i37;
import 'package:meinbssb/services/core/config_service.dart' as _i6;
import 'package:meinbssb/services/core/email_service.dart' as _i33;
import 'package:meinbssb/services/core/http_client.dart' as _i8;
import 'package:meinbssb/services/core/image_service.dart' as _i11;
import 'package:meinbssb/services/core/network_service.dart' as _i13;
import 'package:meinbssb/services/core/postgrest_service.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T1> extends _i1.SmartFake implements _i2.Future<T1> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_1 extends _i1.SmartFake implements Duration {
  _FakeDuration_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_2 extends _i1.SmartFake implements _i3.IOSOptions {
  _FakeIOSOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_3 extends _i1.SmartFake
    implements _i3.AndroidOptions {
  _FakeAndroidOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_4 extends _i1.SmartFake implements _i3.LinuxOptions {
  _FakeLinuxOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_5 extends _i1.SmartFake
    implements _i3.WindowsOptions {
  _FakeWindowsOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_6 extends _i1.SmartFake implements _i3.WebOptions {
  _FakeWebOptions_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_7 extends _i1.SmartFake implements _i3.MacOsOptions {
  _FakeMacOsOptions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestService_8 extends _i1.SmartFake
    implements _i4.PostgrestService {
  _FakePostgrestService_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRegisterSchulungenTeilnehmerResponse_9 extends _i1.SmartFake
    implements _i5.RegisterSchulungenTeilnehmerResponse {
  _FakeRegisterSchulungenTeilnehmerResponse_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfigService_10 extends _i1.SmartFake implements _i6.ConfigService {
  _FakeConfigService_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_11 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i8.HttpClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  int get serverTimeout => (super.noSuchMethod(
        Invocation.getter(#serverTimeout),
        returnValue: 0,
      ) as int);

  @override
  _i2.Future<dynamic> post(
    String? endpoint,
    Map<String, dynamic>? body, {
    String? overrideBaseUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            endpoint,
            body,
          ],
          {#overrideBaseUrl: overrideBaseUrl},
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<dynamic> put(
    String? endpoint,
    Map<String, dynamic>? body, {
    String? overrideBaseUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            endpoint,
            body,
          ],
          {#overrideBaseUrl: overrideBaseUrl},
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<dynamic> delete(
    String? endpoint, {
    Map<String, dynamic>? body,
    String? overrideBaseUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {
            #body: body,
            #overrideBaseUrl: overrideBaseUrl,
          },
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<dynamic> get(
    String? endpoint, {
    String? overrideBaseUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
          {#overrideBaseUrl: overrideBaseUrl},
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<_i10.Uint8List> getBytes(String? endpoint) => (super.noSuchMethod(
        Invocation.method(
          #getBytes,
          [endpoint],
        ),
        returnValue: _i2.Future<_i10.Uint8List>.value(_i10.Uint8List(0)),
      ) as _i2.Future<_i10.Uint8List>);
}

/// A class which mocks [ImageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageService extends _i1.Mock implements _i11.ImageService {
  MockImageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> cacheSchuetzenausweis(
    int? personId,
    _i10.Uint8List? imageData,
    int? timestamp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheSchuetzenausweis,
          [
            personId,
            imageData,
            timestamp,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<_i10.Uint8List?> getCachedSchuetzenausweis(
    int? personId,
    Duration? validity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedSchuetzenausweis,
          [
            personId,
            validity,
          ],
        ),
        returnValue: _i2.Future<_i10.Uint8List?>.value(),
      ) as _i2.Future<_i10.Uint8List?>);

  @override
  _i2.Future<bool> isDeviceOnline() => (super.noSuchMethod(
        Invocation.method(
          #isDeviceOnline,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<_i10.Uint8List> fetchAndCacheSchuetzenausweis(
    int? personId,
    _i2.Future<_i10.Uint8List> Function()? fetchFunction,
    Duration? validityDuration,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAndCacheSchuetzenausweis,
          [
            personId,
            fetchFunction,
            validityDuration,
          ],
        ),
        returnValue: _i2.Future<_i10.Uint8List>.value(_i10.Uint8List(0)),
      ) as _i2.Future<_i10.Uint8List>);

  @override
  _i2.Future<String?> getSchuetzenausweisCacheDate(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSchuetzenausweisCacheDate,
          [personId],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);
}

/// A class which mocks [CacheService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheService extends _i1.Mock implements _i12.CacheService {
  MockCacheService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String?> getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<void> setJson(
    String? key,
    Map<String, dynamic>? json,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setJson,
          [
            key,
            json,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Map<String, dynamic>?> getJson(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getJson,
          [key],
        ),
        returnValue: _i2.Future<Map<String, dynamic>?>.value(),
      ) as _i2.Future<Map<String, dynamic>?>);

  @override
  _i2.Future<void> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<int?> getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValue: _i2.Future<int?>.value(),
      ) as _i2.Future<int?>);

  @override
  _i2.Future<void> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<bool?> getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: _i2.Future<bool?>.value(),
      ) as _i2.Future<bool?>);

  @override
  _i2.Future<void> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> clearPattern(String? pattern) => (super.noSuchMethod(
        Invocation.method(
          #clearPattern,
          [pattern],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<bool> containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> setCacheTimestampForKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #setCacheTimestampForKey,
          [key],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<int?> getCacheTimestampForKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getCacheTimestampForKey,
          [key],
        ),
        returnValue: _i2.Future<int?>.value(),
      ) as _i2.Future<int?>);

  @override
  _i2.Future<T> getCachedData<T>(
    String? cacheKey,
    _i2.Future<T> Function()? getCachedData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedData,
          [
            cacheKey,
            getCachedData,
          ],
        ),
        returnValue: _i9.ifNotNull(
              _i9.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #getCachedData,
                  [
                    cacheKey,
                    getCachedData,
                  ],
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #getCachedData,
                [
                  cacheKey,
                  getCachedData,
                ],
              ),
            ),
      ) as _i2.Future<T>);

  @override
  _i2.Future<T> cacheAndRetrieveData<T>(
    String? cacheKey,
    Duration? validityDuration,
    _i2.Future<T> Function()? fetchData,
    T Function(dynamic)? processResponse,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheAndRetrieveData,
          [
            cacheKey,
            validityDuration,
            fetchData,
            processResponse,
          ],
        ),
        returnValue: _i9.ifNotNull(
              _i9.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #cacheAndRetrieveData,
                  [
                    cacheKey,
                    validityDuration,
                    fetchData,
                    processResponse,
                  ],
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #cacheAndRetrieveData,
                [
                  cacheKey,
                  validityDuration,
                  fetchData,
                  processResponse,
                ],
              ),
            ),
      ) as _i2.Future<T>);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i13.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<bool> hasInternet() => (super.noSuchMethod(
        Invocation.method(
          #hasInternet,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  Duration getCacheExpirationDuration() => (super.noSuchMethod(
        Invocation.method(
          #getCacheExpirationDuration,
          [],
        ),
        returnValue: _FakeDuration_1(
          this,
          Invocation.method(
            #getCacheExpirationDuration,
            [],
          ),
        ),
      ) as Duration);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i3.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_2(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i3.IOSOptions);

  @override
  _i3.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_3(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i3.AndroidOptions);

  @override
  _i3.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_4(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i3.LinuxOptions);

  @override
  _i3.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_5(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i3.WindowsOptions);

  @override
  _i3.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_6(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i3.WebOptions);

  @override
  _i3.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_7(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i3.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i14.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterListener({
    required String? key,
    required _i14.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAllListenersForKey,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
        Invocation.method(
          #unregisterAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Future<void> write({
    required String? key,
    required String? value,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String?> read({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<bool> containsKey({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> delete({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Map<String, String>> readAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i2.Future<Map<String, String>>);

  @override
  _i2.Future<void> deleteAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<bool?> isCupertinoProtectedDataAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isCupertinoProtectedDataAvailable,
          [],
        ),
        returnValue: _i2.Future<bool?>.value(),
      ) as _i2.Future<bool?>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i15.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.PostgrestService get postgrestService => (super.noSuchMethod(
        Invocation.getter(#postgrestService),
        returnValue: _FakePostgrestService_8(
          this,
          Invocation.getter(#postgrestService),
        ),
      ) as _i4.PostgrestService);

  @override
  String generateVerificationToken() => (super.noSuchMethod(
        Invocation.method(
          #generateVerificationToken,
          [],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #generateVerificationToken,
            [],
          ),
        ),
      ) as String);

  @override
  _i2.Future<Map<String, dynamic>> register({
    required String? firstName,
    required String? lastName,
    required String? passNumber,
    required String? email,
    required String? birthDate,
    required String? zipCode,
    required String? personId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #passNumber: passNumber,
            #email: email,
            #birthDate: birthDate,
            #zipCode: zipCode,
            #personId: personId,
          },
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<Map<String, dynamic>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<Map<String, dynamic>> changePassword(
    int? personId,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [
            personId,
            newPassword,
          ],
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<dynamic> finalizeRegistration({
    required String? email,
    required String? password,
    required String? token,
    required String? personId,
    required String? passNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #finalizeRegistration,
          [],
          {
            #email: email,
            #password: password,
            #token: token,
            #personId: personId,
            #passNumber: passNumber,
          },
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);

  @override
  _i2.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<int> findePersonID2(
    String? nachname,
    String? passnummer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findePersonID2,
          [
            nachname,
            passnummer,
          ],
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);

  @override
  _i2.Future<String> fetchLoginEmail(String? passnummer) => (super.noSuchMethod(
        Invocation.method(
          #fetchLoginEmail,
          [passnummer],
        ),
        returnValue: _i2.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #fetchLoginEmail,
            [passnummer],
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<bool> isTokenValid() => (super.noSuchMethod(
        Invocation.method(
          #isTokenValid,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<String> getPersonIDByPassnummer(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPersonIDByPassnummer,
          [passNumber],
        ),
        returnValue: _i2.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getPersonIDByPassnummer,
            [passNumber],
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<Map<String, dynamic>> getPassDatenByPersonId(String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPassDatenByPersonId,
          [personId],
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<String> findePersonID(
    String? lastName,
    String? firstName,
    String? birthDate,
    String? passNumber,
    String? zipCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findePersonID,
          [
            lastName,
            firstName,
            birthDate,
            passNumber,
            zipCode,
          ],
        ),
        returnValue: _i2.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #findePersonID,
            [
              lastName,
              firstName,
              birthDate,
              passNumber,
              zipCode,
            ],
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<Map<String, dynamic>> resetPasswordStep1(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordStep1,
          [passNumber],
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<Map<String, dynamic>> resetPasswordStep2(
    String? token,
    String? personId,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordStep2,
          [
            token,
            personId,
            newPassword,
          ],
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i6.ConfigService {
  MockConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int? getInt(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getInt,
        [
          key,
          section,
        ],
      )) as int?);

  @override
  String? getString(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getString,
        [
          key,
          section,
        ],
      )) as String?);

  @override
  List<String>? getList(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getList,
        [
          key,
          section,
        ],
      )) as List<String>?);

  @override
  bool? getBool(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getBool,
        [
          key,
          section,
        ],
      )) as bool?);
}

/// A class which mocks [TrainingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrainingService extends _i1.Mock implements _i16.TrainingService {
  MockTrainingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<_i17.Schulungstermin>> fetchAngemeldeteSchulungen(
    int? personId,
    String? abDatum,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAngemeldeteSchulungen,
          [
            personId,
            abDatum,
          ],
        ),
        returnValue: _i2.Future<List<_i17.Schulungstermin>>.value(
            <_i17.Schulungstermin>[]),
      ) as _i2.Future<List<_i17.Schulungstermin>>);

  @override
  _i2.Future<List<_i17.Schulungstermin>> fetchSchulungstermine(
    String? abDatum,
    String? webGruppe,
    String? bezirk,
    String? fuerVerlaengerung,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungstermine,
          [
            abDatum,
            webGruppe,
            bezirk,
            fuerVerlaengerung,
          ],
        ),
        returnValue: _i2.Future<List<_i17.Schulungstermin>>.value(
            <_i17.Schulungstermin>[]),
      ) as _i2.Future<List<_i17.Schulungstermin>>);

  @override
  _i2.Future<List<_i18.Schulungsart>> fetchSchulungsarten() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungsarten,
          [],
        ),
        returnValue:
            _i2.Future<List<_i18.Schulungsart>>.value(<_i18.Schulungsart>[]),
      ) as _i2.Future<List<_i18.Schulungsart>>);

  @override
  _i2.Future<List<_i19.Schulung>> fetchAbsolvierteSchulungen(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAbsolvierteSchulungen,
          [personId],
        ),
        returnValue: _i2.Future<List<_i19.Schulung>>.value(<_i19.Schulung>[]),
      ) as _i2.Future<List<_i19.Schulung>>);

  @override
  _i2.Future<bool> registerForSchulung(
    int? personId,
    int? schulungId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerForSchulung,
          [
            personId,
            schulungId,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> unregisterFromSchulung(int? schulungenTeilnehmerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unregisterFromSchulung,
          [schulungenTeilnehmerId],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> clearSchulungenCache(int? personId) => (super.noSuchMethod(
        Invocation.method(
          #clearSchulungenCache,
          [personId],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> clearAllSchulungenCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAllSchulungenCache,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<List<_i20.Disziplin>> fetchDisziplinen() => (super.noSuchMethod(
        Invocation.method(
          #fetchDisziplinen,
          [],
        ),
        returnValue: _i2.Future<List<_i20.Disziplin>>.value(<_i20.Disziplin>[]),
      ) as _i2.Future<List<_i20.Disziplin>>);

  @override
  _i2.Future<void> clearDisziplinenCache() => (super.noSuchMethod(
        Invocation.method(
          #clearDisziplinenCache,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<_i5.RegisterSchulungenTeilnehmerResponse>
      registerSchulungenTeilnehmer({
    required int? schulungTerminId,
    required _i21.UserData? user,
    required String? email,
    required String? telefon,
    required _i22.BankData? bankData,
    required List<Map<String, dynamic>>? felderArray,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #registerSchulungenTeilnehmer,
              [],
              {
                #schulungTerminId: schulungTerminId,
                #user: user,
                #email: email,
                #telefon: telefon,
                #bankData: bankData,
                #felderArray: felderArray,
              },
            ),
            returnValue:
                _i2.Future<_i5.RegisterSchulungenTeilnehmerResponse>.value(
                    _FakeRegisterSchulungenTeilnehmerResponse_9(
              this,
              Invocation.method(
                #registerSchulungenTeilnehmer,
                [],
                {
                  #schulungTerminId: schulungTerminId,
                  #user: user,
                  #email: email,
                  #telefon: telefon,
                  #bankData: bankData,
                  #felderArray: felderArray,
                },
              ),
            )),
          ) as _i2.Future<_i5.RegisterSchulungenTeilnehmerResponse>);

  @override
  _i2.Future<_i17.Schulungstermin?> fetchSchulungstermin(
          String? schulungenTerminID) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungstermin,
          [schulungenTerminID],
        ),
        returnValue: _i2.Future<_i17.Schulungstermin?>.value(),
      ) as _i2.Future<_i17.Schulungstermin?>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i23.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i24.PassdatenAkzeptOrAktiv?>
      fetchPassdatenAkzeptierterOderAktiverPass(int? personId) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchPassdatenAkzeptierterOderAktiverPass,
              [personId],
            ),
            returnValue: _i2.Future<_i24.PassdatenAkzeptOrAktiv?>.value(),
          ) as _i2.Future<_i24.PassdatenAkzeptOrAktiv?>);

  @override
  _i2.Future<_i21.UserData?> fetchPassdaten(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdaten,
          [personId],
        ),
        returnValue: _i2.Future<_i21.UserData?>.value(),
      ) as _i2.Future<_i21.UserData?>);

  @override
  _i2.Future<bool> updateKritischeFelderUndAdresse(_i21.UserData? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateKritischeFelderUndAdresse,
          [userData],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> clearPassdatenCache(int? personId) => (super.noSuchMethod(
        Invocation.method(
          #clearPassdatenCache,
          [personId],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> clearAllPassdatenCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAllPassdatenCache,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<List<_i25.ZweitmitgliedschaftData>> fetchZweitmitgliedschaftenZVE(
    int? personId,
    int? passStatus,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchZweitmitgliedschaftenZVE,
          [
            personId,
            passStatus,
          ],
        ),
        returnValue: _i2.Future<List<_i25.ZweitmitgliedschaftData>>.value(
            <_i25.ZweitmitgliedschaftData>[]),
      ) as _i2.Future<List<_i25.ZweitmitgliedschaftData>>);

  @override
  _i2.Future<List<_i25.ZweitmitgliedschaftData>> fetchZweitmitgliedschaften(
          int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchZweitmitgliedschaften,
          [personId],
        ),
        returnValue: _i2.Future<List<_i25.ZweitmitgliedschaftData>>.value(
            <_i25.ZweitmitgliedschaftData>[]),
      ) as _i2.Future<List<_i25.ZweitmitgliedschaftData>>);

  @override
  _i2.Future<List<_i26.PassDataZVE>> fetchPassdatenZVE(
    int? passdatenId,
    int? personId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdatenZVE,
          [
            passdatenId,
            personId,
          ],
        ),
        returnValue:
            _i2.Future<List<_i26.PassDataZVE>>.value(<_i26.PassDataZVE>[]),
      ) as _i2.Future<List<_i26.PassDataZVE>>);

  @override
  _i2.Future<List<Map<String, dynamic>>> fetchKontakte(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchKontakte,
          [personId],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);

  @override
  _i2.Future<bool> addKontakt(_i27.Contact? contact) => (super.noSuchMethod(
        Invocation.method(
          #addKontakt,
          [contact],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> postBSSBAppPassantrag(
    Map<int, Map<String, int?>>? secondColumns,
    int? passdatenId,
    int? personId,
    int? erstVereinId,
    int? digitalerPass,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postBSSBAppPassantrag,
          [
            secondColumns,
            passdatenId,
            personId,
            erstVereinId,
            digitalerPass,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> deleteKontakt(_i27.Contact? contact) => (super.noSuchMethod(
        Invocation.method(
          #deleteKontakt,
          [contact],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> updateKontakt(_i27.Contact? contact) => (super.noSuchMethod(
        Invocation.method(
          #updateKontakt,
          [contact],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<List<_i28.Person>> fetchAdresseVonPersonID(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAdresseVonPersonID,
          [personId],
        ),
        returnValue: _i2.Future<List<_i28.Person>>.value(<_i28.Person>[]),
      ) as _i2.Future<List<_i28.Person>>);
}

/// A class which mocks [BankService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBankService extends _i1.Mock implements _i29.BankService {
  MockBankService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<_i22.BankData>> fetchBankData(int? webloginId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBankData,
          [webloginId],
        ),
        returnValue: _i2.Future<List<_i22.BankData>>.value(<_i22.BankData>[]),
      ) as _i2.Future<List<_i22.BankData>>);

  @override
  _i2.Future<bool> registerBankData(_i22.BankData? bankData) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerBankData,
          [bankData],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> deleteBankData(_i22.BankData? bankData) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBankData,
          [bankData],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [VereinService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVereinService extends _i1.Mock implements _i30.VereinService {
  MockVereinService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<_i31.Verein>> fetchVereine() => (super.noSuchMethod(
        Invocation.method(
          #fetchVereine,
          [],
        ),
        returnValue: _i2.Future<List<_i31.Verein>>.value(<_i31.Verein>[]),
      ) as _i2.Future<List<_i31.Verein>>);

  @override
  _i2.Future<List<_i31.Verein>> fetchVerein(int? vereinsNr) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchVerein,
          [vereinsNr],
        ),
        returnValue: _i2.Future<List<_i31.Verein>>.value(<_i31.Verein>[]),
      ) as _i2.Future<List<_i31.Verein>>);

  @override
  _i2.Future<List<_i32.FremdeVerband>> fetchFremdeVerbaende() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchFremdeVerbaende,
          [],
        ),
        returnValue:
            _i2.Future<List<_i32.FremdeVerband>>.value(<_i32.FremdeVerband>[]),
      ) as _i2.Future<List<_i32.FremdeVerband>>);
}

/// A class which mocks [PostgrestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestService extends _i1.Mock implements _i4.PostgrestService {
  MockPostgrestService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.ConfigService get configService => (super.noSuchMethod(
        Invocation.getter(#configService),
        returnValue: _FakeConfigService_10(
          this,
          Invocation.getter(#configService),
        ),
      ) as _i6.ConfigService);

  @override
  Map<String, _i10.Uint8List> get profilePhotoCache => (super.noSuchMethod(
        Invocation.getter(#profilePhotoCache),
        returnValue: <String, _i10.Uint8List>{},
      ) as Map<String, _i10.Uint8List>);

  @override
  _i2.Future<Map<String, dynamic>> createUser({
    required String? firstName,
    required String? lastName,
    required String? email,
    required String? passNumber,
    required String? personId,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #email: email,
            #passNumber: passNumber,
            #personId: personId,
            #verificationToken: verificationToken,
          },
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<Map<String, dynamic>?> getUserByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i2.Future<Map<String, dynamic>?>.value(),
      ) as _i2.Future<Map<String, dynamic>?>);

  @override
  _i2.Future<Map<String, dynamic>?> getUserByPersonId(String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPersonId,
          [personId],
        ),
        returnValue: _i2.Future<Map<String, dynamic>?>.value(),
      ) as _i2.Future<Map<String, dynamic>?>);

  @override
  _i2.Future<Map<String, dynamic>?> getUserByPassNumber(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPassNumber,
          [passNumber],
        ),
        returnValue: _i2.Future<Map<String, dynamic>?>.value(),
      ) as _i2.Future<Map<String, dynamic>?>);

  @override
  _i2.Future<bool> verifyUser(String? verificationToken) => (super.noSuchMethod(
        Invocation.method(
          #verifyUser,
          [verificationToken],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> deleteUserRegistration(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserRegistration,
          [id],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<Map<String, dynamic>?> getUserByVerificationToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByVerificationToken,
          [token],
        ),
        returnValue: _i2.Future<Map<String, dynamic>?>.value(),
      ) as _i2.Future<Map<String, dynamic>?>);

  @override
  _i2.Future<Map<String, dynamic>?> getUserByPasswordResetVerificationToken(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPasswordResetVerificationToken,
          [token],
        ),
        returnValue: _i2.Future<Map<String, dynamic>?>.value(),
      ) as _i2.Future<Map<String, dynamic>?>);

  @override
  _i2.Future<void> createPasswordResetEntry({
    required String? personId,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPasswordResetEntry,
          [],
          {
            #personId: personId,
            #verificationToken: verificationToken,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> markPasswordResetEntryUsed(
          {required String? verificationToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #markPasswordResetEntryUsed,
          [],
          {#verificationToken: verificationToken},
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Map<String, dynamic>?> getLatestPasswordResetForPerson(
          String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLatestPasswordResetForPerson,
          [personId],
        ),
        returnValue: _i2.Future<Map<String, dynamic>?>.value(),
      ) as _i2.Future<Map<String, dynamic>?>);

  @override
  _i2.Future<_i7.Response> updateUserByVerificationToken(
    String? token,
    Map<String, dynamic>? fields,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserByVerificationToken,
          [
            token,
            fields,
          ],
        ),
        returnValue: _i2.Future<_i7.Response>.value(_FakeResponse_11(
          this,
          Invocation.method(
            #updateUserByVerificationToken,
            [
              token,
              fields,
            ],
          ),
        )),
      ) as _i2.Future<_i7.Response>);

  @override
  _i2.Future<bool> uploadProfilePhoto(
    String? userId,
    List<int>? photoBytes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePhoto,
          [
            userId,
            photoBytes,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<bool> deleteProfilePhoto(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteProfilePhoto,
          [userId],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<_i10.Uint8List?> getProfilePhoto(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfilePhoto,
          [userId],
        ),
        returnValue: _i2.Future<_i10.Uint8List?>.value(),
      ) as _i2.Future<_i10.Uint8List?>);
}

/// A class which mocks [EmailService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmailService extends _i1.Mock implements _i33.EmailService {
  MockEmailService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<Map<String, dynamic>> sendEmail({
    required String? sender,
    required String? recipient,
    required String? subject,
    String? htmlBody,
    int? emailId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmail,
          [],
          {
            #sender: sender,
            #recipient: recipient,
            #subject: subject,
            #htmlBody: htmlBody,
            #emailId: emailId,
          },
        ),
        returnValue:
            _i2.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i2.Future<Map<String, dynamic>>);

  @override
  _i2.Future<String?> getRegistrationSubject() => (super.noSuchMethod(
        Invocation.method(
          #getRegistrationSubject,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getRegistrationContent() => (super.noSuchMethod(
        Invocation.method(
          #getRegistrationContent,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getVerificationBaseUrl() => (super.noSuchMethod(
        Invocation.method(
          #getVerificationBaseUrl,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getWelcomeSubject() => (super.noSuchMethod(
        Invocation.method(
          #getWelcomeSubject,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getWelcomeContent() => (super.noSuchMethod(
        Invocation.method(
          #getWelcomeContent,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getFromEmail() => (super.noSuchMethod(
        Invocation.method(
          #getFromEmail,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getAccountCreatedSubject() => (super.noSuchMethod(
        Invocation.method(
          #getAccountCreatedSubject,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getAccountCreatedContent() => (super.noSuchMethod(
        Invocation.method(
          #getAccountCreatedContent,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getPasswordResetSubject() => (super.noSuchMethod(
        Invocation.method(
          #getPasswordResetSubject,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getPasswordResetContent() => (super.noSuchMethod(
        Invocation.method(
          #getPasswordResetContent,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getSchulungAbmeldungSubject() => (super.noSuchMethod(
        Invocation.method(
          #getSchulungAbmeldungSubject,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getSchulungAbmeldungContent() => (super.noSuchMethod(
        Invocation.method(
          #getSchulungAbmeldungContent,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getSchulungAnmeldungSubject() => (super.noSuchMethod(
        Invocation.method(
          #getSchulungAnmeldungSubject,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String?> getSchulungAnmeldungContent() => (super.noSuchMethod(
        Invocation.method(
          #getSchulungAnmeldungContent,
          [],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<List<String>> getEmailAddressesByPersonId(String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEmailAddressesByPersonId,
          [personId],
        ),
        returnValue: _i2.Future<List<String>>.value(<String>[]),
      ) as _i2.Future<List<String>>);

  @override
  _i2.Future<void> sendAccountCreationNotifications(
    String? personId,
    String? registeredEmail,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendAccountCreationNotifications,
          [
            personId,
            registeredEmail,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> sendPasswordResetNotifications(
    Map<String, dynamic>? passData,
    List<String>? emailAddresses,
    String? verificationLink,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetNotifications,
          [
            passData,
            emailAddresses,
            verificationLink,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> sendSchulungAbmeldungEmail({
    required String? personId,
    required String? schulungName,
    required String? schulungDate,
    required String? firstName,
    required String? lastName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSchulungAbmeldungEmail,
          [],
          {
            #personId: personId,
            #schulungName: schulungName,
            #schulungDate: schulungDate,
            #firstName: firstName,
            #lastName: lastName,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> sendRegistrationEmail({
    required String? email,
    required String? firstName,
    required String? lastName,
    required String? verificationLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendRegistrationEmail,
          [],
          {
            #email: email,
            #firstName: firstName,
            #lastName: lastName,
            #verificationLink: verificationLink,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<void> sendSchulungAnmeldungEmail({
    required String? personId,
    required String? schulungName,
    required String? schulungDate,
    required String? firstName,
    required String? lastName,
    required String? passnumber,
    required String? email,
    required int? schulungRegistered,
    required int? schulungTotal,
    String? location,
    DateTime? eventDateTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSchulungAnmeldungEmail,
          [],
          {
            #personId: personId,
            #schulungName: schulungName,
            #schulungDate: schulungDate,
            #firstName: firstName,
            #lastName: lastName,
            #passnumber: passnumber,
            #email: email,
            #schulungRegistered: schulungRegistered,
            #schulungTotal: schulungTotal,
            #location: location,
            #eventDateTime: eventDateTime,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [OktoberfestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOktoberfestService extends _i1.Mock
    implements _i34.OktoberfestService {
  MockOktoberfestService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<_i35.Result>> fetchResults({
    required String? passnummer,
    required _i6.ConfigService? configService,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchResults,
          [],
          {
            #passnummer: passnummer,
            #configService: configService,
          },
        ),
        returnValue: _i2.Future<List<_i35.Result>>.value(<_i35.Result>[]),
      ) as _i2.Future<List<_i35.Result>>);

  @override
  _i2.Future<List<_i36.Gewinn>> fetchGewinne({
    required int? jahr,
    required String? passnummer,
    required _i6.ConfigService? configService,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGewinne,
          [],
          {
            #jahr: jahr,
            #passnummer: passnummer,
            #configService: configService,
          },
        ),
        returnValue: _i2.Future<List<_i36.Gewinn>>.value(<_i36.Gewinn>[]),
      ) as _i2.Future<List<_i36.Gewinn>>);

  @override
  _i2.Future<bool> gewinneAbrufen({
    required List<int>? gewinnIDs,
    required String? iban,
    required String? passnummer,
    required _i6.ConfigService? configService,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gewinneAbrufen,
          [],
          {
            #gewinnIDs: gewinnIDs,
            #iban: iban,
            #passnummer: passnummer,
            #configService: configService,
          },
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [CalendarService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarService extends _i1.Mock implements _i37.CalendarService {
  MockCalendarService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<String> generateIcsFile({
    required String? eventTitle,
    required DateTime? eventDate,
    required String? location,
    required String? description,
    required String? organizerEmail,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateIcsFile,
          [],
          {
            #eventTitle: eventTitle,
            #eventDate: eventDate,
            #location: location,
            #description: description,
            #organizerEmail: organizerEmail,
          },
        ),
        returnValue: _i2.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #generateIcsFile,
            [],
            {
              #eventTitle: eventTitle,
              #eventDate: eventDate,
              #location: location,
              #description: description,
              #organizerEmail: organizerEmail,
            },
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<String> saveIcsFile({
    required String? icsContent,
    required String? fileName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveIcsFile,
          [],
          {
            #icsContent: icsContent,
            #fileName: fileName,
          },
        ),
        returnValue: _i2.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #saveIcsFile,
            [],
            {
              #icsContent: icsContent,
              #fileName: fileName,
            },
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<String> generateCalendarLink({
    required String? eventTitle,
    required DateTime? eventDate,
    required String? location,
    required String? description,
    required String? organizerEmail,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateCalendarLink,
          [],
          {
            #eventTitle: eventTitle,
            #eventDate: eventDate,
            #location: location,
            #description: description,
            #organizerEmail: organizerEmail,
          },
        ),
        returnValue: _i2.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #generateCalendarLink,
            [],
            {
              #eventTitle: eventTitle,
              #eventDate: eventDate,
              #location: location,
              #description: description,
              #organizerEmail: organizerEmail,
            },
          ),
        )),
      ) as _i2.Future<String>);

  @override
  String generateUID(
    String? eventTitle,
    DateTime? eventDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateUID,
          [
            eventTitle,
            eventDate,
          ],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #generateUID,
            [
              eventTitle,
              eventDate,
            ],
          ),
        ),
      ) as String);

  @override
  String formatDateTime(DateTime? dateTime) => (super.noSuchMethod(
        Invocation.method(
          #formatDateTime,
          [dateTime],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #formatDateTime,
            [dateTime],
          ),
        ),
      ) as String);

  @override
  String escapeText(String? text) => (super.noSuchMethod(
        Invocation.method(
          #escapeText,
          [text],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #escapeText,
            [text],
          ),
        ),
      ) as String);

  @override
  String sanitizeFileName(String? fileName) => (super.noSuchMethod(
        Invocation.method(
          #sanitizeFileName,
          [fileName],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #sanitizeFileName,
            [fileName],
          ),
        ),
      ) as String);

  @override
  String formatDateForFileName(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #formatDateForFileName,
          [date],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #formatDateForFileName,
            [date],
          ),
        ),
      ) as String);
}

/// A class which mocks [BezirkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBezirkService extends _i1.Mock implements _i38.BezirkService {
  MockBezirkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<_i39.Bezirk>> fetchBezirke() => (super.noSuchMethod(
        Invocation.method(
          #fetchBezirke,
          [],
        ),
        returnValue: _i2.Future<List<_i39.Bezirk>>.value(<_i39.Bezirk>[]),
      ) as _i2.Future<List<_i39.Bezirk>>);

  @override
  _i2.Future<List<_i39.Bezirk>> fetchBezirk(int? bezirkNr) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBezirk,
          [bezirkNr],
        ),
        returnValue: _i2.Future<List<_i39.Bezirk>>.value(<_i39.Bezirk>[]),
      ) as _i2.Future<List<_i39.Bezirk>>);

  @override
  _i2.Future<List<_i39.BezirkSearchTriple>> fetchBezirkeforSearch() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBezirkeforSearch,
          [],
        ),
        returnValue: _i2.Future<List<_i39.BezirkSearchTriple>>.value(
            <_i39.BezirkSearchTriple>[]),
      ) as _i2.Future<List<_i39.BezirkSearchTriple>>);
}
