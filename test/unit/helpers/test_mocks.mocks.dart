// Mocks generated by Mockito 5.4.6 from annotations
// in meinbssb/test/unit/helpers/test_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:typed_data' as _i19;

import 'package:flutter/foundation.dart' as _i34;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i9;
import 'package:http/http.dart' as _i10;
import 'package:meinbssb/models/bank_data.dart' as _i24;
import 'package:meinbssb/models/bezirk_data.dart' as _i30;
import 'package:meinbssb/models/contact_data.dart' as _i18;
import 'package:meinbssb/models/disziplin_data.dart' as _i23;
import 'package:meinbssb/models/fremde_verband_data.dart' as _i26;
import 'package:meinbssb/models/gewinn_data.dart' as _i29;
import 'package:meinbssb/models/pass_data_zve_data.dart' as _i15;
import 'package:meinbssb/models/passdaten_akzept_or_aktiv_data.dart' as _i14;
import 'package:meinbssb/models/person_data.dart' as _i27;
import 'package:meinbssb/models/register_schulungen_teilnehmer_response_data.dart'
    as _i7;
import 'package:meinbssb/models/result_data.dart' as _i28;
import 'package:meinbssb/models/schulung_data.dart' as _i17;
import 'package:meinbssb/models/schulungsart_data.dart' as _i20;
import 'package:meinbssb/models/schulungstermin_data.dart' as _i21;
import 'package:meinbssb/models/schulungstermine_zusatzfelder_data.dart'
    as _i22;
import 'package:meinbssb/models/user_data.dart' as _i13;
import 'package:meinbssb/models/verein_data.dart' as _i25;
import 'package:meinbssb/models/zweitmitgliedschaft_data.dart' as _i16;
import 'package:meinbssb/services/api/auth_service.dart' as _i6;
import 'package:meinbssb/services/api_service.dart' as _i12;
import 'package:meinbssb/services/core/cache_service.dart' as _i31;
import 'package:meinbssb/services/core/config_service.dart' as _i4;
import 'package:meinbssb/services/core/email_service.dart' as _i5;
import 'package:meinbssb/services/core/http_client.dart' as _i33;
import 'package:meinbssb/services/core/image_service.dart' as _i3;
import 'package:meinbssb/services/core/network_service.dart' as _i32;
import 'package:meinbssb/services/core/postgrest_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostgrestService_0 extends _i1.SmartFake
    implements _i2.PostgrestService {
  _FakePostgrestService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImageService_1 extends _i1.SmartFake implements _i3.ImageService {
  _FakeImageService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfigService_2 extends _i1.SmartFake implements _i4.ConfigService {
  _FakeConfigService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmailService_3 extends _i1.SmartFake implements _i5.EmailService {
  _FakeEmailService_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthService_4 extends _i1.SmartFake implements _i6.AuthService {
  _FakeAuthService_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_5 extends _i1.SmartFake implements Duration {
  _FakeDuration_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRegisterSchulungenTeilnehmerResponse_6 extends _i1.SmartFake
    implements _i7.RegisterSchulungenTeilnehmerResponse {
  _FakeRegisterSchulungenTeilnehmerResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_7<T1> extends _i1.SmartFake implements _i8.Future<T1> {
  _FakeFuture_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_8 extends _i1.SmartFake implements _i9.IOSOptions {
  _FakeIOSOptions_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_9 extends _i1.SmartFake
    implements _i9.AndroidOptions {
  _FakeAndroidOptions_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_10 extends _i1.SmartFake implements _i9.LinuxOptions {
  _FakeLinuxOptions_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_11 extends _i1.SmartFake
    implements _i9.WindowsOptions {
  _FakeWindowsOptions_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_12 extends _i1.SmartFake implements _i9.WebOptions {
  _FakeWebOptions_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_13 extends _i1.SmartFake implements _i9.MacOsOptions {
  _FakeMacOsOptions_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_14 extends _i1.SmartFake implements _i10.Response {
  _FakeResponse_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i6.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostgrestService get postgrestService => (super.noSuchMethod(
        Invocation.getter(#postgrestService),
        returnValue: _FakePostgrestService_0(
          this,
          Invocation.getter(#postgrestService),
        ),
      ) as _i2.PostgrestService);

  @override
  String generateVerificationToken() => (super.noSuchMethod(
        Invocation.method(
          #generateVerificationToken,
          [],
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #generateVerificationToken,
            [],
          ),
        ),
      ) as String);

  @override
  _i8.Future<Map<String, dynamic>> register({
    required String? firstName,
    required String? lastName,
    required String? passNumber,
    required String? email,
    required String? birthDate,
    required String? zipCode,
    required String? personId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #passNumber: passNumber,
            #email: email,
            #birthDate: birthDate,
            #zipCode: zipCode,
            #personId: personId,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> myBSSBPasswortAendern(
    int? personId,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #myBSSBPasswortAendern,
          [
            personId,
            newPassword,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<dynamic> finalizeRegistration({
    required String? email,
    required String? password,
    required String? token,
    required String? personId,
    required String? passNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #finalizeRegistration,
          [],
          {
            #email: email,
            #password: password,
            #token: token,
            #personId: personId,
            #passNumber: passNumber,
          },
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<int> findePersonID2(
    String? nachname,
    String? passnummer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findePersonID2,
          [
            nachname,
            passnummer,
          ],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<String> fetchLoginEmail(String? passnummer) => (super.noSuchMethod(
        Invocation.method(
          #fetchLoginEmail,
          [passnummer],
        ),
        returnValue: _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #fetchLoginEmail,
            [passnummer],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<bool> isTokenValid() => (super.noSuchMethod(
        Invocation.method(
          #isTokenValid,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<String> getPersonIDByPassnummer(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPersonIDByPassnummer,
          [passNumber],
        ),
        returnValue: _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getPersonIDByPassnummer,
            [passNumber],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<Map<String, dynamic>> getPassDatenByPersonId(String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPassDatenByPersonId,
          [personId],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<String> findePersonID(
    String? lastName,
    String? firstName,
    String? birthDate,
    String? passNumber,
    String? zipCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findePersonID,
          [
            lastName,
            firstName,
            birthDate,
            passNumber,
            zipCode,
          ],
        ),
        returnValue: _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #findePersonID,
            [
              lastName,
              firstName,
              birthDate,
              passNumber,
              zipCode,
            ],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<Map<String, dynamic>> resetPasswordStep1(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordStep1,
          [passNumber],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> resetPasswordStep2(
    String? token,
    String? personId,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordStep2,
          [
            token,
            personId,
            newPassword,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i12.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ImageService get imageService => (super.noSuchMethod(
        Invocation.getter(#imageService),
        returnValue: _FakeImageService_1(
          this,
          Invocation.getter(#imageService),
        ),
      ) as _i3.ImageService);

  @override
  _i4.ConfigService get configService => (super.noSuchMethod(
        Invocation.getter(#configService),
        returnValue: _FakeConfigService_2(
          this,
          Invocation.getter(#configService),
        ),
      ) as _i4.ConfigService);

  @override
  _i5.EmailService get emailService => (super.noSuchMethod(
        Invocation.getter(#emailService),
        returnValue: _FakeEmailService_3(
          this,
          Invocation.getter(#emailService),
        ),
      ) as _i5.EmailService);

  @override
  _i6.AuthService get authService => (super.noSuchMethod(
        Invocation.getter(#authService),
        returnValue: _FakeAuthService_4(
          this,
          Invocation.getter(#authService),
        ),
      ) as _i6.AuthService);

  @override
  _i8.Future<bool> hasInternet() => (super.noSuchMethod(
        Invocation.method(
          #hasInternet,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  Duration getCacheExpirationDuration() => (super.noSuchMethod(
        Invocation.method(
          #getCacheExpirationDuration,
          [],
        ),
        returnValue: _FakeDuration_5(
          this,
          Invocation.method(
            #getCacheExpirationDuration,
            [],
          ),
        ),
      ) as Duration);

  @override
  _i8.Future<String?> getCachedUsername() => (super.noSuchMethod(
        Invocation.method(
          #getCachedUsername,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<Map<String, dynamic>> register({
    required String? firstName,
    required String? lastName,
    required String? passNumber,
    required String? email,
    required String? birthDate,
    required String? zipCode,
    required String? personId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #passNumber: passNumber,
            #email: email,
            #birthDate: birthDate,
            #zipCode: zipCode,
            #personId: personId,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> passwordReset(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #passwordReset,
          [passNumber],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> finalizeResetPassword(
    String? token,
    String? personId,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #finalizeResetPassword,
          [
            token,
            personId,
            newPassword,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByPasswordResetVerificationToken(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPasswordResetVerificationToken,
          [token],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<Map<String, dynamic>> myBSSBPasswortAendern(
    int? personId,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #myBSSBPasswortAendern,
          [
            personId,
            newPassword,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<_i13.UserData?> fetchPassdaten(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdaten,
          [personId],
        ),
        returnValue: _i8.Future<_i13.UserData?>.value(),
      ) as _i8.Future<_i13.UserData?>);

  @override
  _i8.Future<_i14.PassdatenAkzeptOrAktiv?>
      fetchPassdatenAkzeptierterOderAktiverPass(int? personId) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchPassdatenAkzeptierterOderAktiverPass,
              [personId],
            ),
            returnValue: _i8.Future<_i14.PassdatenAkzeptOrAktiv?>.value(),
          ) as _i8.Future<_i14.PassdatenAkzeptOrAktiv?>);

  @override
  _i8.Future<bool> bssbAppPassantrag(
    Map<int, Map<String, int?>>? secondColumns,
    int? passdatenId,
    int? personId,
    int? erstVereinId,
    int? digitalerPass,
    int? antragsTyp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #bssbAppPassantrag,
          [
            secondColumns,
            passdatenId,
            personId,
            erstVereinId,
            digitalerPass,
            antragsTyp,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i15.PassDataZVE>> fetchPassdatenZVE(
    int? passdatenId,
    int? personId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPassdatenZVE,
          [
            passdatenId,
            personId,
          ],
        ),
        returnValue:
            _i8.Future<List<_i15.PassDataZVE>>.value(<_i15.PassDataZVE>[]),
      ) as _i8.Future<List<_i15.PassDataZVE>>);

  @override
  _i8.Future<bool> updateKritischeFelderUndAdresse(_i13.UserData? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateKritischeFelderUndAdresse,
          [userData],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i16.ZweitmitgliedschaftData>> fetchZweitmitgliedschaften(
          int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchZweitmitgliedschaften,
          [personId],
        ),
        returnValue: _i8.Future<List<_i16.ZweitmitgliedschaftData>>.value(
            <_i16.ZweitmitgliedschaftData>[]),
      ) as _i8.Future<List<_i16.ZweitmitgliedschaftData>>);

  @override
  _i8.Future<List<_i16.ZweitmitgliedschaftData>> fetchZweitmitgliedschaftenZVE(
    int? personId,
    int? passStatus,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchZweitmitgliedschaftenZVE,
          [
            personId,
            passStatus,
          ],
        ),
        returnValue: _i8.Future<List<_i16.ZweitmitgliedschaftData>>.value(
            <_i16.ZweitmitgliedschaftData>[]),
      ) as _i8.Future<List<_i16.ZweitmitgliedschaftData>>);

  @override
  _i8.Future<List<_i17.Schulung>> fetchAbsolvierteSchulungen(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAbsolvierteSchulungen,
          [personId],
        ),
        returnValue: _i8.Future<List<_i17.Schulung>>.value(<_i17.Schulung>[]),
      ) as _i8.Future<List<_i17.Schulung>>);

  @override
  _i8.Future<List<Map<String, dynamic>>> fetchKontakte(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchKontakte,
          [personId],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<bool> addKontakt(_i18.Contact? contact) => (super.noSuchMethod(
        Invocation.method(
          #addKontakt,
          [contact],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> deleteKontakt(_i18.Contact? contact) => (super.noSuchMethod(
        Invocation.method(
          #deleteKontakt,
          [contact],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i19.Uint8List> fetchSchuetzenausweis(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchuetzenausweis,
          [personId],
        ),
        returnValue: _i8.Future<_i19.Uint8List>.value(_i19.Uint8List(0)),
      ) as _i8.Future<_i19.Uint8List>);

  @override
  _i8.Future<List<_i20.Schulungsart>> fetchSchulungsarten() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungsarten,
          [],
        ),
        returnValue:
            _i8.Future<List<_i20.Schulungsart>>.value(<_i20.Schulungsart>[]),
      ) as _i8.Future<List<_i20.Schulungsart>>);

  @override
  _i8.Future<List<_i21.Schulungstermin>> fetchAngemeldeteSchulungen(
    int? personId,
    String? abDatum,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAngemeldeteSchulungen,
          [
            personId,
            abDatum,
          ],
        ),
        returnValue: _i8.Future<List<_i21.Schulungstermin>>.value(
            <_i21.Schulungstermin>[]),
      ) as _i8.Future<List<_i21.Schulungstermin>>);

  @override
  _i8.Future<bool> isRegisterForThisSchulung(
    int? personId,
    int? schulungsterminId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isRegisterForThisSchulung,
          [
            personId,
            schulungsterminId,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i22.SchulungstermineZusatzfelder>>
      fetchSchulungstermineZusatzfelder(int? schulungsTerminId) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchSchulungstermineZusatzfelder,
              [schulungsTerminId],
            ),
            returnValue:
                _i8.Future<List<_i22.SchulungstermineZusatzfelder>>.value(
                    <_i22.SchulungstermineZusatzfelder>[]),
          ) as _i8.Future<List<_i22.SchulungstermineZusatzfelder>>);

  @override
  _i8.Future<List<_i21.Schulungstermin>> fetchSchulungstermine(
    String? abDatum,
    String? webGruppe,
    String? bezirk,
    String? fuerVerlaengerung,
    String? fuerVuelVerlaengerung,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungstermine,
          [
            abDatum,
            webGruppe,
            bezirk,
            fuerVerlaengerung,
            fuerVuelVerlaengerung,
          ],
        ),
        returnValue: _i8.Future<List<_i21.Schulungstermin>>.value(
            <_i21.Schulungstermin>[]),
      ) as _i8.Future<List<_i21.Schulungstermin>>);

  @override
  _i8.Future<_i21.Schulungstermin?> fetchSchulungstermin(
          String? schulungenTerminId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchulungstermin,
          [schulungenTerminId],
        ),
        returnValue: _i8.Future<_i21.Schulungstermin?>.value(),
      ) as _i8.Future<_i21.Schulungstermin?>);

  @override
  _i8.Future<bool> unregisterFromSchulung(int? schulungenTeilnehmerID) =>
      (super.noSuchMethod(
        Invocation.method(
          #unregisterFromSchulung,
          [schulungenTeilnehmerID],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> registerFromSchulung(
    int? personId,
    int? schulungId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerFromSchulung,
          [
            personId,
            schulungId,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i23.Disziplin>> fetchDisziplinen() => (super.noSuchMethod(
        Invocation.method(
          #fetchDisziplinen,
          [],
        ),
        returnValue: _i8.Future<List<_i23.Disziplin>>.value(<_i23.Disziplin>[]),
      ) as _i8.Future<List<_i23.Disziplin>>);

  @override
  _i8.Future<List<_i24.BankData>> fetchBankdatenMyBSSB(int? webloginId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBankdatenMyBSSB,
          [webloginId],
        ),
        returnValue: _i8.Future<List<_i24.BankData>>.value(<_i24.BankData>[]),
      ) as _i8.Future<List<_i24.BankData>>);

  @override
  _i8.Future<bool> registerBankData(_i24.BankData? bankData) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerBankData,
          [bankData],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> deleteBankData(_i24.BankData? bankData) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBankData,
          [bankData],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i25.Verein>> fetchVereine() => (super.noSuchMethod(
        Invocation.method(
          #fetchVereine,
          [],
        ),
        returnValue: _i8.Future<List<_i25.Verein>>.value(<_i25.Verein>[]),
      ) as _i8.Future<List<_i25.Verein>>);

  @override
  _i8.Future<List<_i25.Verein>> fetchVerein(int? vereinsNr) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchVerein,
          [vereinsNr],
        ),
        returnValue: _i8.Future<List<_i25.Verein>>.value(<_i25.Verein>[]),
      ) as _i8.Future<List<_i25.Verein>>);

  @override
  _i8.Future<List<_i26.FremdeVerband>> fetchFremdeVerbaende(int? vereinsNr) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchFremdeVerbaende,
          [vereinsNr],
        ),
        returnValue:
            _i8.Future<List<_i26.FremdeVerband>>.value(<_i26.FremdeVerband>[]),
      ) as _i8.Future<List<_i26.FremdeVerband>>);

  @override
  _i8.Future<_i7.RegisterSchulungenTeilnehmerResponse>
      registerSchulungenTeilnehmer({
    required int? schulungTerminId,
    required _i13.UserData? user,
    required String? email,
    required String? telefon,
    required _i24.BankData? bankData,
    required List<Map<String, dynamic>>? felderArray,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #registerSchulungenTeilnehmer,
              [],
              {
                #schulungTerminId: schulungTerminId,
                #user: user,
                #email: email,
                #telefon: telefon,
                #bankData: bankData,
                #felderArray: felderArray,
              },
            ),
            returnValue:
                _i8.Future<_i7.RegisterSchulungenTeilnehmerResponse>.value(
                    _FakeRegisterSchulungenTeilnehmerResponse_6(
              this,
              Invocation.method(
                #registerSchulungenTeilnehmer,
                [],
                {
                  #schulungTerminId: schulungTerminId,
                  #user: user,
                  #email: email,
                  #telefon: telefon,
                  #bankData: bankData,
                  #felderArray: felderArray,
                },
              ),
            )),
          ) as _i8.Future<_i7.RegisterSchulungenTeilnehmerResponse>);

  @override
  _i8.Future<int> findePersonID2(
    String? nachname,
    String? passnummer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findePersonID2,
          [
            nachname,
            passnummer,
          ],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> clearSchulungenCache(int? personId) => (super.noSuchMethod(
        Invocation.method(
          #clearSchulungenCache,
          [personId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> clearAllSchulungenCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAllSchulungenCache,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> clearPassdatenCache(int? personId) => (super.noSuchMethod(
        Invocation.method(
          #clearPassdatenCache,
          [personId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendSchulungAbmeldungEmail({
    required String? personId,
    required String? schulungName,
    required String? schulungDate,
    required String? firstName,
    required String? lastName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSchulungAbmeldungEmail,
          [],
          {
            #personId: personId,
            #schulungName: schulungName,
            #schulungDate: schulungDate,
            #firstName: firstName,
            #lastName: lastName,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendSchulungAnmeldungEmail({
    required String? personId,
    required String? schulungName,
    required String? schulungDate,
    required String? firstName,
    required String? lastName,
    required String? passnumber,
    required String? email,
    required int? schulungRegistered,
    required int? schulungTotal,
    String? location,
    DateTime? eventDateTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSchulungAnmeldungEmail,
          [],
          {
            #personId: personId,
            #schulungName: schulungName,
            #schulungDate: schulungDate,
            #firstName: firstName,
            #lastName: lastName,
            #passnumber: passnumber,
            #email: email,
            #schulungRegistered: schulungRegistered,
            #schulungTotal: schulungTotal,
            #location: location,
            #eventDateTime: eventDateTime,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> clearAllPassdatenCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAllPassdatenCache,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> clearDisziplinenCache() => (super.noSuchMethod(
        Invocation.method(
          #clearDisziplinenCache,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i27.Person>> fetchAdresseVonPersonID(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAdresseVonPersonID,
          [personId],
        ),
        returnValue: _i8.Future<List<_i27.Person>>.value(<_i27.Person>[]),
      ) as _i8.Future<List<_i27.Person>>);

  @override
  bool validateIBAN(String? iban) => (super.noSuchMethod(
        Invocation.method(
          #validateIBAN,
          [iban],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i8.Future<Map<String, dynamic>> createUser({
    required String? firstName,
    required String? lastName,
    required String? email,
    required String? passNumber,
    required String? personId,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #email: email,
            #passNumber: passNumber,
            #personId: personId,
            #verificationToken: verificationToken,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByPersonId(String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPersonId,
          [personId],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByPassNumber(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPassNumber,
          [passNumber],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<bool> verifyUser(String? verificationToken) => (super.noSuchMethod(
        Invocation.method(
          #verifyUser,
          [verificationToken],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> deleteUserRegistration(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserRegistration,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByVerificationToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByVerificationToken,
          [token],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<bool> uploadProfilePhoto(
    String? userId,
    List<int>? photoBytes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePhoto,
          [
            userId,
            photoBytes,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> deleteProfilePhoto(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteProfilePhoto,
          [userId],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i19.Uint8List?> getProfilePhoto(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfilePhoto,
          [userId],
        ),
        returnValue: _i8.Future<_i19.Uint8List?>.value(),
      ) as _i8.Future<_i19.Uint8List?>);

  @override
  _i8.Future<String?> getFromEmail() => (super.noSuchMethod(
        Invocation.method(
          #getFromEmail,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getRegistrationSubject() => (super.noSuchMethod(
        Invocation.method(
          #getRegistrationSubject,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getRegistrationContent() => (super.noSuchMethod(
        Invocation.method(
          #getRegistrationContent,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<Map<String, dynamic>> sendEmail({
    required String? from,
    required String? recipient,
    required String? subject,
    String? htmlBody,
    int? emailId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmail,
          [],
          {
            #from: from,
            #recipient: recipient,
            #subject: subject,
            #htmlBody: htmlBody,
            #emailId: emailId,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<void> sendAccountCreationNotifications(
    String? personId,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendAccountCreationNotifications,
          [
            personId,
            email,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i28.Result>> fetchResults(String? passnummer) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchResults,
          [passnummer],
        ),
        returnValue: _i8.Future<List<_i28.Result>>.value(<_i28.Result>[]),
      ) as _i8.Future<List<_i28.Result>>);

  @override
  _i8.Future<List<_i29.Gewinn>> fetchGewinne(
    int? jahr,
    String? passnummer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGewinne,
          [
            jahr,
            passnummer,
          ],
        ),
        returnValue: _i8.Future<List<_i29.Gewinn>>.value(<_i29.Gewinn>[]),
      ) as _i8.Future<List<_i29.Gewinn>>);

  @override
  _i8.Future<bool> gewinneAbrufen({
    required List<int>? gewinnIDs,
    required String? iban,
    required String? passnummer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gewinneAbrufen,
          [],
          {
            #gewinnIDs: gewinnIDs,
            #iban: iban,
            #passnummer: passnummer,
          },
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i30.Bezirk>> fetchBezirke() => (super.noSuchMethod(
        Invocation.method(
          #fetchBezirke,
          [],
        ),
        returnValue: _i8.Future<List<_i30.Bezirk>>.value(<_i30.Bezirk>[]),
      ) as _i8.Future<List<_i30.Bezirk>>);

  @override
  _i8.Future<List<_i30.Bezirk>> fetchBezirk(int? bezirkNr) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBezirk,
          [bezirkNr],
        ),
        returnValue: _i8.Future<List<_i30.Bezirk>>.value(<_i30.Bezirk>[]),
      ) as _i8.Future<List<_i30.Bezirk>>);

  @override
  _i8.Future<List<_i30.BezirkSearchTriple>> fetchBezirkeforSearch() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBezirkeforSearch,
          [],
        ),
        returnValue: _i8.Future<List<_i30.BezirkSearchTriple>>.value(
            <_i30.BezirkSearchTriple>[]),
      ) as _i8.Future<List<_i30.BezirkSearchTriple>>);

  @override
  _i8.Future<void> createEmailValidationEntry({
    required String? personId,
    required String? email,
    required String? emailType,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEmailValidationEntry,
          [],
          {
            #personId: personId,
            #email: email,
            #emailType: emailType,
            #verificationToken: verificationToken,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<Map<String, dynamic>?> getEmailValidationByToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEmailValidationByToken,
          [token],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<bool> markEmailValidationAsValidated(String? verificationToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #markEmailValidationAsValidated,
          [verificationToken],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> sendEmailValidationNotifications({
    required String? personId,
    required String? email,
    required String? firstName,
    required String? lastName,
    required String? title,
    required String? emailType,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailValidationNotifications,
          [],
          {
            #personId: personId,
            #email: email,
            #firstName: firstName,
            #lastName: lastName,
            #title: title,
            #emailType: emailType,
            #verificationToken: verificationToken,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendStartingRightsChangeNotifications(
          {required int? personId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendStartingRightsChangeNotifications,
          [],
          {#personId: personId},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i4.ConfigService {
  MockConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int? getInt(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getInt,
        [
          key,
          section,
        ],
      )) as int?);

  @override
  String? getString(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getString,
        [
          key,
          section,
        ],
      )) as String?);

  @override
  List<String>? getList(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getList,
        [
          key,
          section,
        ],
      )) as List<String>?);

  @override
  bool? getBool(
    String? key, [
    String? section,
  ]) =>
      (super.noSuchMethod(Invocation.method(
        #getBool,
        [
          key,
          section,
        ],
      )) as bool?);
}

/// A class which mocks [EmailService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmailService extends _i1.Mock implements _i5.EmailService {
  MockEmailService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<Map<String, dynamic>> sendEmail({
    required String? sender,
    required String? recipient,
    required String? subject,
    String? htmlBody,
    int? emailId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmail,
          [],
          {
            #sender: sender,
            #recipient: recipient,
            #subject: subject,
            #htmlBody: htmlBody,
            #emailId: emailId,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<String?> getRegistrationSubject() => (super.noSuchMethod(
        Invocation.method(
          #getRegistrationSubject,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getRegistrationContent() => (super.noSuchMethod(
        Invocation.method(
          #getRegistrationContent,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getVerificationBaseUrl() => (super.noSuchMethod(
        Invocation.method(
          #getVerificationBaseUrl,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getWelcomeSubject() => (super.noSuchMethod(
        Invocation.method(
          #getWelcomeSubject,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getWelcomeContent() => (super.noSuchMethod(
        Invocation.method(
          #getWelcomeContent,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getFromEmail() => (super.noSuchMethod(
        Invocation.method(
          #getFromEmail,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getAccountCreatedSubject() => (super.noSuchMethod(
        Invocation.method(
          #getAccountCreatedSubject,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getAccountCreatedContent() => (super.noSuchMethod(
        Invocation.method(
          #getAccountCreatedContent,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getPasswordResetSubject() => (super.noSuchMethod(
        Invocation.method(
          #getPasswordResetSubject,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getPasswordResetContent() => (super.noSuchMethod(
        Invocation.method(
          #getPasswordResetContent,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getSchulungAbmeldungSubject() => (super.noSuchMethod(
        Invocation.method(
          #getSchulungAbmeldungSubject,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getSchulungAbmeldungContent() => (super.noSuchMethod(
        Invocation.method(
          #getSchulungAbmeldungContent,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getSchulungAnmeldungSubject() => (super.noSuchMethod(
        Invocation.method(
          #getSchulungAnmeldungSubject,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getSchulungAnmeldungContent() => (super.noSuchMethod(
        Invocation.method(
          #getSchulungAnmeldungContent,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getEmailValidationSubject() => (super.noSuchMethod(
        Invocation.method(
          #getEmailValidationSubject,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getEmailValidationContent() => (super.noSuchMethod(
        Invocation.method(
          #getEmailValidationContent,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getStartingRightsChangeSubject() => (super.noSuchMethod(
        Invocation.method(
          #getStartingRightsChangeSubject,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getStartingRightsChangeContent() => (super.noSuchMethod(
        Invocation.method(
          #getStartingRightsChangeContent,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<List<String>> getEmailAddressesByPersonId(String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEmailAddressesByPersonId,
          [personId],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<void> sendAccountCreationNotifications(
    String? personId,
    String? registeredEmail,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendAccountCreationNotifications,
          [
            personId,
            registeredEmail,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendPasswordResetNotifications(
    Map<String, dynamic>? passData,
    List<String>? emailAddresses,
    String? verificationLink,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetNotifications,
          [
            passData,
            emailAddresses,
            verificationLink,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendSchulungAbmeldungEmail({
    required String? personId,
    required String? schulungName,
    required String? schulungDate,
    required String? firstName,
    required String? lastName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSchulungAbmeldungEmail,
          [],
          {
            #personId: personId,
            #schulungName: schulungName,
            #schulungDate: schulungDate,
            #firstName: firstName,
            #lastName: lastName,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendRegistrationEmail({
    required String? email,
    required String? firstName,
    required String? lastName,
    required String? verificationLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendRegistrationEmail,
          [],
          {
            #email: email,
            #firstName: firstName,
            #lastName: lastName,
            #verificationLink: verificationLink,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendSchulungAnmeldungEmail({
    required String? personId,
    required String? schulungName,
    required String? schulungDate,
    required String? firstName,
    required String? lastName,
    required String? passnumber,
    required String? email,
    required int? schulungRegistered,
    required int? schulungTotal,
    String? location,
    DateTime? eventDateTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSchulungAnmeldungEmail,
          [],
          {
            #personId: personId,
            #schulungName: schulungName,
            #schulungDate: schulungDate,
            #firstName: firstName,
            #lastName: lastName,
            #passnumber: passnumber,
            #email: email,
            #schulungRegistered: schulungRegistered,
            #schulungTotal: schulungTotal,
            #location: location,
            #eventDateTime: eventDateTime,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendEmailValidationNotifications({
    required String? personId,
    required String? email,
    required String? firstName,
    required String? lastName,
    required String? title,
    required String? emailType,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailValidationNotifications,
          [],
          {
            #personId: personId,
            #email: email,
            #firstName: firstName,
            #lastName: lastName,
            #title: title,
            #emailType: emailType,
            #verificationToken: verificationToken,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendStartingRightsChangeNotifications({
    required int? personId,
    required _i13.UserData? passdaten,
    required List<String>? userEmailAddresses,
    required List<String>? clubEmailAddresses,
    required List<_i16.ZweitmitgliedschaftData>? zweitmitgliedschaften,
    required _i14.PassdatenAkzeptOrAktiv? zveData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendStartingRightsChangeNotifications,
          [],
          {
            #personId: personId,
            #passdaten: passdaten,
            #userEmailAddresses: userEmailAddresses,
            #clubEmailAddresses: clubEmailAddresses,
            #zweitmitgliedschaften: zweitmitgliedschaften,
            #zveData: zveData,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [CacheService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheService extends _i1.Mock implements _i31.CacheService {
  MockCacheService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String?> getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<void> setJson(
    String? key,
    Map<String, dynamic>? json,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setJson,
          [
            key,
            json,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<Map<String, dynamic>?> getJson(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getJson,
          [key],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<void> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<int?> getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValue: _i8.Future<int?>.value(),
      ) as _i8.Future<int?>);

  @override
  _i8.Future<void> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool?> getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: _i8.Future<bool?>.value(),
      ) as _i8.Future<bool?>);

  @override
  _i8.Future<void> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> clearPattern(String? pattern) => (super.noSuchMethod(
        Invocation.method(
          #clearPattern,
          [pattern],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> setCacheTimestampForKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #setCacheTimestampForKey,
          [key],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<int?> getCacheTimestampForKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getCacheTimestampForKey,
          [key],
        ),
        returnValue: _i8.Future<int?>.value(),
      ) as _i8.Future<int?>);

  @override
  _i8.Future<T> getCachedData<T>(
    String? cacheKey,
    _i8.Future<T> Function()? getCachedData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedData,
          [
            cacheKey,
            getCachedData,
          ],
        ),
        returnValue: _i11.ifNotNull(
              _i11.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #getCachedData,
                  [
                    cacheKey,
                    getCachedData,
                  ],
                ),
              ),
              (T v) => _i8.Future<T>.value(v),
            ) ??
            _FakeFuture_7<T>(
              this,
              Invocation.method(
                #getCachedData,
                [
                  cacheKey,
                  getCachedData,
                ],
              ),
            ),
      ) as _i8.Future<T>);

  @override
  _i8.Future<T> cacheAndRetrieveData<T>(
    String? cacheKey,
    Duration? validityDuration,
    _i8.Future<T> Function()? fetchData,
    T Function(dynamic)? processResponse,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheAndRetrieveData,
          [
            cacheKey,
            validityDuration,
            fetchData,
            processResponse,
          ],
        ),
        returnValue: _i11.ifNotNull(
              _i11.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #cacheAndRetrieveData,
                  [
                    cacheKey,
                    validityDuration,
                    fetchData,
                    processResponse,
                  ],
                ),
              ),
              (T v) => _i8.Future<T>.value(v),
            ) ??
            _FakeFuture_7<T>(
              this,
              Invocation.method(
                #cacheAndRetrieveData,
                [
                  cacheKey,
                  validityDuration,
                  fetchData,
                  processResponse,
                ],
              ),
            ),
      ) as _i8.Future<T>);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i32.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<bool> hasInternet() => (super.noSuchMethod(
        Invocation.method(
          #hasInternet,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  Duration getCacheExpirationDuration() => (super.noSuchMethod(
        Invocation.method(
          #getCacheExpirationDuration,
          [],
        ),
        returnValue: _FakeDuration_5(
          this,
          Invocation.method(
            #getCacheExpirationDuration,
            [],
          ),
        ),
      ) as Duration);
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i33.HttpClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  int get serverTimeout => (super.noSuchMethod(
        Invocation.getter(#serverTimeout),
        returnValue: 0,
      ) as int);

  @override
  _i8.Future<dynamic> post(
    String? endpoint,
    Map<String, dynamic>? body, {
    String? overrideBaseUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            endpoint,
            body,
          ],
          {#overrideBaseUrl: overrideBaseUrl},
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<dynamic> put(
    String? endpoint,
    Map<String, dynamic>? body, {
    String? overrideBaseUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            endpoint,
            body,
          ],
          {#overrideBaseUrl: overrideBaseUrl},
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<dynamic> delete(
    String? endpoint, {
    Map<String, dynamic>? body,
    String? overrideBaseUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {
            #body: body,
            #overrideBaseUrl: overrideBaseUrl,
          },
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<dynamic> get(
    String? endpoint, {
    String? overrideBaseUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
          {#overrideBaseUrl: overrideBaseUrl},
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i19.Uint8List> getBytes(String? endpoint) => (super.noSuchMethod(
        Invocation.method(
          #getBytes,
          [endpoint],
        ),
        returnValue: _i8.Future<_i19.Uint8List>.value(_i19.Uint8List(0)),
      ) as _i8.Future<_i19.Uint8List>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i9.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_8(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i9.IOSOptions);

  @override
  _i9.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_9(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i9.AndroidOptions);

  @override
  _i9.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_10(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i9.LinuxOptions);

  @override
  _i9.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_11(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i9.WindowsOptions);

  @override
  _i9.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_12(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i9.WebOptions);

  @override
  _i9.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_13(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i9.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i34.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterListener({
    required String? key,
    required _i34.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAllListenersForKey,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
        Invocation.method(
          #unregisterAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> write({
    required String? key,
    required String? value,
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String?> read({
    required String? key,
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<bool> containsKey({
    required String? key,
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> delete({
    required String? key,
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<Map<String, String>> readAll({
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i8.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i8.Future<Map<String, String>>);

  @override
  _i8.Future<void> deleteAll({
    _i9.IOSOptions? iOptions,
    _i9.AndroidOptions? aOptions,
    _i9.LinuxOptions? lOptions,
    _i9.WebOptions? webOptions,
    _i9.MacOsOptions? mOptions,
    _i9.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool?> isCupertinoProtectedDataAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isCupertinoProtectedDataAvailable,
          [],
        ),
        returnValue: _i8.Future<bool?>.value(),
      ) as _i8.Future<bool?>);
}

/// A class which mocks [PostgrestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestService extends _i1.Mock implements _i2.PostgrestService {
  MockPostgrestService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.ConfigService get configService => (super.noSuchMethod(
        Invocation.getter(#configService),
        returnValue: _FakeConfigService_2(
          this,
          Invocation.getter(#configService),
        ),
      ) as _i4.ConfigService);

  @override
  Map<String, _i19.Uint8List> get profilePhotoCache => (super.noSuchMethod(
        Invocation.getter(#profilePhotoCache),
        returnValue: <String, _i19.Uint8List>{},
      ) as Map<String, _i19.Uint8List>);

  @override
  _i8.Future<Map<String, dynamic>> createUser({
    required String? firstName,
    required String? lastName,
    required String? email,
    required String? passNumber,
    required String? personId,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #email: email,
            #passNumber: passNumber,
            #personId: personId,
            #verificationToken: verificationToken,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByPersonId(String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPersonId,
          [personId],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByPassNumber(String? passNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPassNumber,
          [passNumber],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<bool> verifyUser(String? verificationToken) => (super.noSuchMethod(
        Invocation.method(
          #verifyUser,
          [verificationToken],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> deleteUserRegistration(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserRegistration,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByVerificationToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByVerificationToken,
          [token],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<Map<String, dynamic>?> getUserByPasswordResetVerificationToken(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByPasswordResetVerificationToken,
          [token],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<void> createPasswordResetEntry({
    required String? personId,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPasswordResetEntry,
          [],
          {
            #personId: personId,
            #verificationToken: verificationToken,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> markPasswordResetEntryUsed(
          {required String? verificationToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #markPasswordResetEntryUsed,
          [],
          {#verificationToken: verificationToken},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<Map<String, dynamic>?> getLatestPasswordResetForPerson(
          String? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLatestPasswordResetForPerson,
          [personId],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<_i10.Response> updateUserByVerificationToken(
    String? token,
    Map<String, dynamic>? fields,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserByVerificationToken,
          [
            token,
            fields,
          ],
        ),
        returnValue: _i8.Future<_i10.Response>.value(_FakeResponse_14(
          this,
          Invocation.method(
            #updateUserByVerificationToken,
            [
              token,
              fields,
            ],
          ),
        )),
      ) as _i8.Future<_i10.Response>);

  @override
  _i8.Future<void> createEmailValidationEntry({
    required String? personId,
    required String? email,
    required String? emailType,
    required String? verificationToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEmailValidationEntry,
          [],
          {
            #personId: personId,
            #email: email,
            #emailType: emailType,
            #verificationToken: verificationToken,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<Map<String, dynamic>?> getEmailValidationByToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEmailValidationByToken,
          [token],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<bool> markEmailValidationAsValidated(String? verificationToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #markEmailValidationAsValidated,
          [verificationToken],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> uploadProfilePhoto(
    String? userId,
    List<int>? photoBytes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePhoto,
          [
            userId,
            photoBytes,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> deleteProfilePhoto(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteProfilePhoto,
          [userId],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i19.Uint8List?> getProfilePhoto(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfilePhoto,
          [userId],
        ),
        returnValue: _i8.Future<_i19.Uint8List?>.value(),
      ) as _i8.Future<_i19.Uint8List?>);
}
