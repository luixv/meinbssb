name: Flutter CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Run tests
        run: flutter test ./test/unit/services ./test/unit/screens --coverage
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true

  build-android:
    name: Build Android
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Build Android
        run: flutter build apk --release
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    name: Build iOS
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Build IPA
        run: flutter build ipa --release --no-codesign
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa/*.ipa

  build-web:
    name: Build Web
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Build Web
        run: flutter build web
      - name: Upload Web Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-web
          path: build/web
          if-no-files-found: ignore

  build-windows:
    name: Build Windows
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Build Windows
        run: flutter build windows
      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          path: build/windows/runner/Release
          if-no-files-found: ignore

  release:
    name: Create Release
    needs: [build-android, build-ios, build-web, build-windows]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Version
        id: version
        run: |
          VERSION=$(date +%Y.%m.%d-%H%M%S)
          echo "tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          git config --local user.name "GitHub Actions Bot"
          git config --local user.email "actions@github.com"
          git tag ${{ steps.version.outputs.tag }}
          git push origin ${{ steps.version.outputs.tag }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List Artifact Contents
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          files: |
            artifacts/release-apk/app-release.apk
            artifacts/release-ipa/*.ipa
            artifacts/release-web/index.html
            artifacts/release-web/canvaskit/canvaskit.js
            artifacts/release-web/canvaskit/chromium/canvaskit.js
            artifacts/release-web/assets/**
            artifacts/release-web/icons/**
            artifacts/release-web/*.js
            artifacts/release-web/*.wasm
            artifacts/release-web/*.json
            artifacts/release-web/*.png
            artifacts/release-web/version.json
            artifacts/release-windows/**
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}